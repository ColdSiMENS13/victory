[2023-09-16T22:37:31.026111+03:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /var/www/vendor/symfony/error-handler/DebugClassLoader.php:335)"} []
[2023-09-16T22:48:06.376489+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/"" at /var/www/vendor/symfony/http-kernel/EventListener/RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/\" at /var/www/vendor/symfony/http-kernel/EventListener/RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:185)"} []
[2023-09-16T22:48:06.504865+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"39d23e"},"request_uri":"http://localhost/_wdt/39d23e","method":"GET"} []
[2023-09-16T22:48:06.539769+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/favicon.ico" (from "http://localhost/")" at /var/www/vendor/symfony/http-kernel/EventListener/RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/favicon.ico\" (from \"http://localhost/\") at /var/www/vendor/symfony/http-kernel/EventListener/RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /var/www/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2023-09-16T22:51:27.325171+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/"" at /var/www/vendor/symfony/http-kernel/EventListener/RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/\" at /var/www/vendor/symfony/http-kernel/EventListener/RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:185)"} []
[2023-09-16T22:51:27.436041+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"600a82"},"request_uri":"http://localhost/_wdt/600a82","method":"GET"} []
[2023-10-25T16:49:50.089303+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:85/"" at /var/www/vendor/symfony/http-kernel/EventListener/RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:85/\" at /var/www/vendor/symfony/http-kernel/EventListener/RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:185)"} []
[2023-10-25T16:49:50.608040+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:85/"" at /var/www/vendor/symfony/http-kernel/EventListener/RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:85/\" at /var/www/vendor/symfony/http-kernel/EventListener/RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:185)"} []
[2023-10-25T16:49:51.387855+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8aa905"},"request_uri":"http://localhost:85/_wdt/8aa905","method":"GET"} []
[2023-10-25T16:54:26.799067+03:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /var/www/vendor/symfony/error-handler/DebugClassLoader.php:335)"} []
[2023-10-25T16:54:26.851277+03:00] request.INFO: Matched route "app_default_gettitle". {"route":"app_default_gettitle","route_parameters":{"_route":"app_default_gettitle","_controller":"App\\Controller\\DefaultController::getTitle"},"request_uri":"http://localhost:85/","method":"GET"} []
[2023-10-25T16:54:26.854135+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-10-25T16:54:59.480203+03:00] request.INFO: Matched route "app_default_gettitle". {"route":"app_default_gettitle","route_parameters":{"_route":"app_default_gettitle","_controller":"App\\Controller\\DefaultController::getTitle"},"request_uri":"http://localhost:85/","method":"GET"} []
[2023-10-25T16:54:59.487680+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-10-30T20:13:18.919936+03:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /var/www/vendor/symfony/error-handler/DebugClassLoader.php:335)"} []
[2023-10-30T20:13:19.247107+03:00] request.INFO: Matched route "app_default_gettitle". {"route":"app_default_gettitle","route_parameters":{"_route":"app_default_gettitle","_controller":"App\\Controller\\DefaultController::getTitle"},"request_uri":"http://localhost:85/","method":"GET"} []
[2023-10-30T20:13:19.342682+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-10-30T20:13:20.826176+03:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /var/www/vendor/symfony/error-handler/DebugClassLoader.php:335)"} []
[2023-10-30T20:13:20.857016+03:00] request.INFO: Matched route "app_default_gettitle". {"route":"app_default_gettitle","route_parameters":{"_route":"app_default_gettitle","_controller":"App\\Controller\\DefaultController::getTitle"},"request_uri":"http://localhost:85/","method":"GET"} []
[2023-10-30T20:13:20.859989+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-10-30T20:13:21.158135+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:85/favicon.ico" (from "http://localhost:85/")" at /var/www/vendor/symfony/http-kernel/EventListener/RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:85/favicon.ico\" (from \"http://localhost:85/\") at /var/www/vendor/symfony/http-kernel/EventListener/RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /var/www/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2023-10-30T20:31:43.412728+03:00] request.INFO: Matched route "app_default_gettitle". {"route":"app_default_gettitle","route_parameters":{"_route":"app_default_gettitle","_controller":"App\\Controller\\DefaultController::getTitle"},"request_uri":"http://localhost:85/","method":"GET"} []
[2023-10-30T20:31:43.506784+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-10-30T20:40:39.667194+03:00] request.INFO: Matched route "app_default_gettitle". {"route":"app_default_gettitle","route_parameters":{"_route":"app_default_gettitle","_controller":"App\\Controller\\DefaultController::getTitle"},"request_uri":"http://localhost:85/","method":"GET"} []
[2023-10-30T20:40:39.753199+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-10-30T20:40:53.337870+03:00] request.INFO: Matched route "app_default_gettitle". {"route":"app_default_gettitle","route_parameters":{"_route":"app_default_gettitle","_controller":"App\\Controller\\DefaultController::getTitle"},"request_uri":"http://localhost:85/","method":"GET"} []
[2023-10-30T20:40:53.343932+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-10-30T20:40:55.756342+03:00] request.INFO: Matched route "app_default_gettitle". {"route":"app_default_gettitle","route_parameters":{"_route":"app_default_gettitle","_controller":"App\\Controller\\DefaultController::getTitle"},"request_uri":"http://localhost:85/","method":"GET"} []
[2023-10-30T20:40:55.764320+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-10-30T20:41:05.502854+03:00] request.INFO: Matched route "app_default_gettitle". {"route":"app_default_gettitle","route_parameters":{"_route":"app_default_gettitle","_controller":"App\\Controller\\DefaultController::getTitle"},"request_uri":"http://localhost:85/","method":"GET"} []
[2023-10-30T20:41:05.509039+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-10-30T20:41:43.671260+03:00] request.INFO: Matched route "app_default_gettitle". {"route":"app_default_gettitle","route_parameters":{"_route":"app_default_gettitle","_controller":"App\\Controller\\DefaultController::getTitle"},"request_uri":"http://localhost:85/","method":"GET"} []
[2023-10-30T20:41:43.678838+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-10-30T20:42:00.048715+03:00] request.INFO: Matched route "app_default_gettitle". {"route":"app_default_gettitle","route_parameters":{"_route":"app_default_gettitle","_controller":"App\\Controller\\DefaultController::getTitle"},"request_uri":"http://localhost:85/","method":"GET"} []
[2023-10-30T20:42:00.056299+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-10-30T20:48:31.815766+03:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /var/www/vendor/symfony/error-handler/DebugClassLoader.php:335)"} []
[2023-10-30T20:48:32.251006+03:00] request.INFO: Matched route "app_default_gettitle". {"route":"app_default_gettitle","route_parameters":{"_route":"app_default_gettitle","_controller":"App\\Controller\\DefaultController::getTitle"},"request_uri":"http://localhost:85/","method":"GET"} []
[2023-10-30T20:48:32.253413+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-10-30T20:48:52.407019+03:00] request.INFO: Matched route "app_default_gettitle". {"route":"app_default_gettitle","route_parameters":{"_route":"app_default_gettitle","_controller":"App\\Controller\\DefaultController::getTitle"},"request_uri":"http://localhost:85/","method":"GET"} []
[2023-10-30T20:48:52.416810+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-10-30T20:48:54.202660+03:00] request.INFO: Matched route "app_default_gettitle". {"route":"app_default_gettitle","route_parameters":{"_route":"app_default_gettitle","_controller":"App\\Controller\\DefaultController::getTitle"},"request_uri":"http://localhost:85/","method":"GET"} []
[2023-10-30T20:48:54.209575+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-10-30T20:50:03.341603+03:00] request.INFO: Matched route "app_default_gettitle". {"route":"app_default_gettitle","route_parameters":{"_route":"app_default_gettitle","_controller":"App\\Controller\\DefaultController::getTitle"},"request_uri":"http://localhost:85/","method":"GET"} []
[2023-10-30T20:50:03.347604+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-10-30T20:50:17.879955+03:00] request.INFO: Matched route "app_default_gettitle". {"route":"app_default_gettitle","route_parameters":{"_route":"app_default_gettitle","_controller":"App\\Controller\\DefaultController::getTitle"},"request_uri":"http://localhost:85/","method":"GET"} []
[2023-10-30T20:50:17.886294+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-10-30T21:28:38.620605+03:00] console.CRITICAL: Error thrown while running command "'doctrine:make:migration'". Message: "There are no commands defined in the "doctrine:make" namespace.  Did you mean one of these?     doctrine     doctrine:cache     doctrine:database     doctrine:mapping     doctrine:migrations     doctrine:query     doctrine:schema" {"exception":"[object] (Symfony\\Component\\Console\\Exception\\NamespaceNotFoundException(code: 0): There are no commands defined in the \"doctrine:make\" namespace.\n\nDid you mean one of these?\n    doctrine\n    doctrine:cache\n    doctrine:database\n    doctrine:mapping\n    doctrine:migrations\n    doctrine:query\n    doctrine:schema at /home/simonchik/IdeaProjects/car-review/vendor/symfony/console/Application.php:624)","command":"'doctrine:make:migration'","message":"There are no commands defined in the \"doctrine:make\" namespace.\n\nDid you mean one of these?\n    doctrine\n    doctrine:cache\n    doctrine:database\n    doctrine:mapping\n    doctrine:migrations\n    doctrine:query\n    doctrine:schema"} []
[2023-10-30T21:29:14.694328+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"base","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"base","serverVersion":"15","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"base","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"base","serverVersion":"15","charset":"utf8"}} []
[2023-10-30T21:29:15.487364+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:29:15.609784+03:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"base"},"types":{"1":2}} []
[2023-10-30T21:29:15.910165+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:29:15.910809+03:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"base"},"types":{"1":2}} []
[2023-10-30T21:29:15.928664+03:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2023-10-30T21:29:15.953896+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:29:15.954343+03:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'base'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'base'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2023-10-30T21:29:16.016154+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:29:16.016667+03:00] doctrine.DEBUG: Executing query: SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (SELECT pg_get_expr(adbin, adrelid)              FROM pg_attrdef              WHERE c.oid = pg_attrdef.adrelid                 AND pg_attrdef.adnum=a.attnum             ) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (SELECT pg_get_expr(adbin, adrelid)\n             FROM pg_attrdef\n             WHERE c.oid = pg_attrdef.adrelid\n                AND pg_attrdef.adnum=a.attnum\n            ) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2023-10-30T21:29:16.225987+03:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2023-10-30T21:29:16.229257+03:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2023-10-30T21:29:16.252467+03:00] doctrine.DEBUG: Executing query: SELECT c.relname,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2023-10-30T21:29:16.321134+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2023-10-30T21:29:16.344778+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2023-10-30T21:29:16.404793+03:00] doctrine.INFO: Disconnecting [] []
[2023-10-30T21:29:34.230402+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"base","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"base","serverVersion":"15","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"base","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"base","serverVersion":"15","charset":"utf8"}} []
[2023-10-30T21:29:34.247865+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:29:36.341202+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:29:36.343409+03:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"base"},"types":{"1":2}} []
[2023-10-30T21:29:36.430294+03:00] doctrine.DEBUG: Executing statement: CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) {"sql":"CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version))"} []
[2023-10-30T21:29:36.848567+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-10-30T21:29:36.849975+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-10-30T21:29:36.850504+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-10-30T21:29:36.884451+03:00] doctrine.DEBUG: Beginning transaction [] []
[2023-10-30T21:29:36.912463+03:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20231030182915","2":"2023-10-30 21:29:36","3":21}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20231030182915","2":"2023-10-30 21:29:36","3":21},"types":{"1":2,"2":2,"3":1}} []
[2023-10-30T21:29:36.919680+03:00] doctrine.DEBUG: Committing transaction [] []
[2023-10-30T21:29:36.964036+03:00] doctrine.INFO: Disconnecting [] []
[2023-10-30T21:32:43.929414+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"base","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"base","serverVersion":"15","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"base","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"base","serverVersion":"15","charset":"utf8"}} []
[2023-10-30T21:32:43.946403+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:32:43.949437+03:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"base"},"types":{"1":2}} []
[2023-10-30T21:32:43.983790+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2023-10-30T21:32:43.985412+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2023-10-30T21:32:43.985849+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:32:43.986172+03:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"base"},"types":{"1":2}} []
[2023-10-30T21:32:43.997980+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:32:43.998486+03:00] doctrine.DEBUG: Executing query: SELECT c.relname,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2023-10-30T21:32:44.018566+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:32:44.019005+03:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2023-10-30T21:32:44.022069+03:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (SELECT pg_get_expr(adbin, adrelid)              FROM pg_attrdef              WHERE c.oid = pg_attrdef.adrelid                 AND pg_attrdef.adnum=a.attnum             ) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (SELECT pg_get_expr(adbin, adrelid)\n             FROM pg_attrdef\n             WHERE c.oid = pg_attrdef.adrelid\n                AND pg_attrdef.adnum=a.attnum\n            ) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2023-10-30T21:32:44.061265+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:32:44.061832+03:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2023-10-30T21:32:44.064817+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC"} []
[2023-10-30T21:32:44.080903+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-10-30T21:32:44.090473+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:32:44.090929+03:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"base"},"types":{"1":2}} []
[2023-10-30T21:32:44.092844+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:32:44.093338+03:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"base"},"types":{"1":2}} []
[2023-10-30T21:32:44.095316+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:32:44.095829+03:00] doctrine.DEBUG: Executing query: SELECT c.relname,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2023-10-30T21:32:44.097131+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:32:44.097622+03:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2023-10-30T21:32:44.099519+03:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (SELECT pg_get_expr(adbin, adrelid)              FROM pg_attrdef              WHERE c.oid = pg_attrdef.adrelid                 AND pg_attrdef.adnum=a.attnum             ) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (SELECT pg_get_expr(adbin, adrelid)\n             FROM pg_attrdef\n             WHERE c.oid = pg_attrdef.adrelid\n                AND pg_attrdef.adnum=a.attnum\n            ) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2023-10-30T21:32:44.102809+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:32:44.103412+03:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2023-10-30T21:32:44.106452+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC"} []
[2023-10-30T21:32:44.107531+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-10-30T21:32:44.109255+03:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2023-10-30T21:32:44.110239+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:32:44.110679+03:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'base'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'base'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2023-10-30T21:32:44.112939+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:32:44.113377+03:00] doctrine.DEBUG: Executing query: SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (SELECT pg_get_expr(adbin, adrelid)              FROM pg_attrdef              WHERE c.oid = pg_attrdef.adrelid                 AND pg_attrdef.adnum=a.attnum             ) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (SELECT pg_get_expr(adbin, adrelid)\n             FROM pg_attrdef\n             WHERE c.oid = pg_attrdef.adrelid\n                AND pg_attrdef.adnum=a.attnum\n            ) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2023-10-30T21:32:44.116492+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2023-10-30T21:32:44.117576+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2023-10-30T21:32:44.117940+03:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2023-10-30T21:32:44.121950+03:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2023-10-30T21:32:44.124070+03:00] doctrine.DEBUG: Executing query: SELECT c.relname,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2023-10-30T21:32:44.125670+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC"} []
[2023-10-30T21:32:44.127767+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2023-10-30T21:32:44.206710+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2023-10-30T21:32:44.218743+03:00] doctrine.INFO: Disconnecting [] []
[2023-10-30T21:32:55.395543+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"base","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"base","serverVersion":"15","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"base","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"base","serverVersion":"15","charset":"utf8"}} []
[2023-10-30T21:32:55.412694+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:32:57.527225+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:32:57.529094+03:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"base"},"types":{"1":2}} []
[2023-10-30T21:32:57.541177+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2023-10-30T21:32:57.542640+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2023-10-30T21:32:57.554439+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:32:57.554872+03:00] doctrine.DEBUG: Executing query: SELECT c.relname,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2023-10-30T21:32:57.557676+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:32:57.558049+03:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2023-10-30T21:32:57.560831+03:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (SELECT pg_get_expr(adbin, adrelid)              FROM pg_attrdef              WHERE c.oid = pg_attrdef.adrelid                 AND pg_attrdef.adnum=a.attnum             ) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (SELECT pg_get_expr(adbin, adrelid)\n             FROM pg_attrdef\n             WHERE c.oid = pg_attrdef.adrelid\n                AND pg_attrdef.adnum=a.attnum\n            ) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2023-10-30T21:32:57.569374+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:32:57.569910+03:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2023-10-30T21:32:57.572856+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC"} []
[2023-10-30T21:32:57.579119+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-10-30T21:32:57.580549+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-10-30T21:32:57.581038+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-10-30T21:32:57.587021+03:00] doctrine.DEBUG: Beginning transaction [] []
[2023-10-30T21:32:57.637698+03:00] doctrine.DEBUG: Executing query: CREATE SEQUENCE wheels_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"CREATE SEQUENCE wheels_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2023-10-30T21:32:57.639387+03:00] doctrine.DEBUG: Executing query: CREATE TABLE wheels (id INT NOT NULL, slug VARCHAR(255) NOT NULL, wheel_brand VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE wheels (id INT NOT NULL, slug VARCHAR(255) NOT NULL, wheel_brand VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2023-10-30T21:32:57.735228+03:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20231030183244","2":"2023-10-30 21:32:57","3":147}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20231030183244","2":"2023-10-30 21:32:57","3":147},"types":{"1":2,"2":2,"3":1}} []
[2023-10-30T21:32:57.736203+03:00] doctrine.DEBUG: Committing transaction [] []
[2023-10-30T21:32:57.755556+03:00] doctrine.INFO: Disconnecting [] []
[2023-10-30T21:41:06.196807+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"base","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"base","serverVersion":"15","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"base","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"base","serverVersion":"15","charset":"utf8"}} []
[2023-10-30T21:41:06.217765+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:41:08.654163+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:41:08.656428+03:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"base"},"types":{"1":2}} []
[2023-10-30T21:41:08.672386+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2023-10-30T21:41:08.673911+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2023-10-30T21:41:08.684839+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:41:08.685302+03:00] doctrine.DEBUG: Executing query: SELECT c.relname,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2023-10-30T21:41:08.688375+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:41:08.688805+03:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2023-10-30T21:41:08.692016+03:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (SELECT pg_get_expr(adbin, adrelid)              FROM pg_attrdef              WHERE c.oid = pg_attrdef.adrelid                 AND pg_attrdef.adnum=a.attnum             ) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (SELECT pg_get_expr(adbin, adrelid)\n             FROM pg_attrdef\n             WHERE c.oid = pg_attrdef.adrelid\n                AND pg_attrdef.adnum=a.attnum\n            ) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2023-10-30T21:41:08.700656+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:41:08.701325+03:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2023-10-30T21:41:08.704957+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC"} []
[2023-10-30T21:41:08.712089+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-10-30T21:41:08.713888+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-10-30T21:41:08.714833+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-10-30T21:41:08.716088+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-10-30T21:41:08.725709+03:00] doctrine.INFO: Disconnecting [] []
[2023-10-30T21:45:52.831751+03:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /home/simonchik/IdeaProjects/car-review/vendor/symfony/error-handler/DebugClassLoader.php:335)"} []
[2023-10-30T21:45:52.863855+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"db","port":5432,"user":"base","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"base","serverVersion":"15","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"db","port":5432,"user":"base","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"base","serverVersion":"15","charset":"utf8"}} []
[2023-10-30T21:45:52.900597+03:00] console.CRITICAL: Error thrown while running command "doctrine:migrations:migrate". Message: "An exception occurred in the driver: SQLSTATE[08006] [7] could not translate host name "db" to address: Temporary failure in name resolution" {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] could not translate host name \"db\" to address: Temporary failure in name resolution at /home/simonchik/IdeaProjects/car-review/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:77)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] could not translate host name \"db\" to address: Temporary failure in name resolution at /home/simonchik/IdeaProjects/car-review/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:28)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] could not translate host name \"db\" to address: Temporary failure in name resolution at /home/simonchik/IdeaProjects/car-review/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:35)","command":"doctrine:migrations:migrate","message":"An exception occurred in the driver: SQLSTATE[08006] [7] could not translate host name \"db\" to address: Temporary failure in name resolution"} []
[2023-10-30T21:45:52.901242+03:00] console.DEBUG: Command "doctrine:migrations:migrate" exited with code "7" {"command":"doctrine:migrations:migrate","code":7} []
[2023-10-30T21:46:08.432418+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"base","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"base","serverVersion":"15","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"base","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"base","serverVersion":"15","charset":"utf8"}} []
[2023-10-30T21:46:08.450771+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:46:10.693651+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:46:10.696294+03:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"base"},"types":{"1":2}} []
[2023-10-30T21:46:10.710363+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2023-10-30T21:46:10.711960+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2023-10-30T21:46:10.724033+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:46:10.724547+03:00] doctrine.DEBUG: Executing query: SELECT c.relname,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2023-10-30T21:46:10.727448+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:46:10.727946+03:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2023-10-30T21:46:10.730917+03:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (SELECT pg_get_expr(adbin, adrelid)              FROM pg_attrdef              WHERE c.oid = pg_attrdef.adrelid                 AND pg_attrdef.adnum=a.attnum             ) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (SELECT pg_get_expr(adbin, adrelid)\n             FROM pg_attrdef\n             WHERE c.oid = pg_attrdef.adrelid\n                AND pg_attrdef.adnum=a.attnum\n            ) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2023-10-30T21:46:10.739806+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:46:10.740553+03:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2023-10-30T21:46:10.743748+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC"} []
[2023-10-30T21:46:10.754404+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-10-30T21:46:10.756599+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-10-30T21:46:10.757462+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-10-30T21:46:10.758734+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-10-30T21:46:10.767461+03:00] doctrine.INFO: Disconnecting [] []
[2023-10-30T21:47:02.494327+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"base","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"base","serverVersion":"15","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"base","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"base","serverVersion":"15","charset":"utf8"}} []
[2023-10-30T21:47:02.513799+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:47:02.517324+03:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"base"},"types":{"1":2}} []
[2023-10-30T21:47:02.528978+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2023-10-30T21:47:02.530833+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2023-10-30T21:47:02.531368+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:47:02.531920+03:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"base"},"types":{"1":2}} []
[2023-10-30T21:47:02.544183+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:47:02.544879+03:00] doctrine.DEBUG: Executing query: SELECT c.relname,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2023-10-30T21:47:02.547828+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:47:02.548370+03:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2023-10-30T21:47:02.551687+03:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (SELECT pg_get_expr(adbin, adrelid)              FROM pg_attrdef              WHERE c.oid = pg_attrdef.adrelid                 AND pg_attrdef.adnum=a.attnum             ) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (SELECT pg_get_expr(adbin, adrelid)\n             FROM pg_attrdef\n             WHERE c.oid = pg_attrdef.adrelid\n                AND pg_attrdef.adnum=a.attnum\n            ) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2023-10-30T21:47:02.560737+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:47:02.561469+03:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2023-10-30T21:47:02.565133+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC"} []
[2023-10-30T21:47:02.568813+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-10-30T21:47:02.572938+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:47:02.573511+03:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"base"},"types":{"1":2}} []
[2023-10-30T21:47:02.576788+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:47:02.577455+03:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"base"},"types":{"1":2}} []
[2023-10-30T21:47:02.580072+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:47:02.580648+03:00] doctrine.DEBUG: Executing query: SELECT c.relname,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2023-10-30T21:47:02.582173+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:47:02.582595+03:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2023-10-30T21:47:02.584907+03:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (SELECT pg_get_expr(adbin, adrelid)              FROM pg_attrdef              WHERE c.oid = pg_attrdef.adrelid                 AND pg_attrdef.adnum=a.attnum             ) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (SELECT pg_get_expr(adbin, adrelid)\n             FROM pg_attrdef\n             WHERE c.oid = pg_attrdef.adrelid\n                AND pg_attrdef.adnum=a.attnum\n            ) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2023-10-30T21:47:02.588224+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:47:02.588814+03:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2023-10-30T21:47:02.592148+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC"} []
[2023-10-30T21:47:02.593327+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-10-30T21:47:02.595589+03:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2023-10-30T21:47:02.596666+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:47:02.597124+03:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'base'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'base'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2023-10-30T21:47:02.600661+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:47:02.601163+03:00] doctrine.DEBUG: Executing query: SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (SELECT pg_get_expr(adbin, adrelid)              FROM pg_attrdef              WHERE c.oid = pg_attrdef.adrelid                 AND pg_attrdef.adnum=a.attnum             ) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (SELECT pg_get_expr(adbin, adrelid)\n             FROM pg_attrdef\n             WHERE c.oid = pg_attrdef.adrelid\n                AND pg_attrdef.adnum=a.attnum\n            ) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2023-10-30T21:47:02.605261+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2023-10-30T21:47:02.606247+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2023-10-30T21:47:02.606601+03:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2023-10-30T21:47:02.609796+03:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2023-10-30T21:47:02.611917+03:00] doctrine.DEBUG: Executing query: SELECT c.relname,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2023-10-30T21:47:02.613478+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC"} []
[2023-10-30T21:47:02.614163+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16392 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16392 AND attnum IN (1) ORDER BY attnum ASC"} []
[2023-10-30T21:47:02.616376+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2023-10-30T21:47:02.631487+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2023-10-30T21:47:02.637619+03:00] doctrine.INFO: Disconnecting [] []
[2023-10-30T21:47:06.669256+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"base","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"base","serverVersion":"15","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"base","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"base","serverVersion":"15","charset":"utf8"}} []
[2023-10-30T21:47:06.686383+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:47:09.239656+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:47:09.241493+03:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"base"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"base"},"types":{"1":2}} []
[2023-10-30T21:47:09.268758+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2023-10-30T21:47:09.270248+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2023-10-30T21:47:09.282789+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:47:09.283312+03:00] doctrine.DEBUG: Executing query: SELECT c.relname,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2023-10-30T21:47:09.286482+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:47:09.287025+03:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2023-10-30T21:47:09.289908+03:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (SELECT pg_get_expr(adbin, adrelid)              FROM pg_attrdef              WHERE c.oid = pg_attrdef.adrelid                 AND pg_attrdef.adnum=a.attnum             ) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (SELECT pg_get_expr(adbin, adrelid)\n             FROM pg_attrdef\n             WHERE c.oid = pg_attrdef.adrelid\n                AND pg_attrdef.adnum=a.attnum\n            ) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2023-10-30T21:47:09.298736+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-10-30T21:47:09.299413+03:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2023-10-30T21:47:09.302518+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC"} []
[2023-10-30T21:47:09.309862+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-10-30T21:47:09.311431+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-10-30T21:47:09.312196+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-10-30T21:47:09.316475+03:00] doctrine.DEBUG: Beginning transaction [] []
[2023-10-30T21:47:09.319963+03:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20231030184702","2":"2023-10-30 21:47:09","3":3}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20231030184702","2":"2023-10-30 21:47:09","3":3},"types":{"1":2,"2":2,"3":1}} []
[2023-10-30T21:47:09.321289+03:00] doctrine.DEBUG: Committing transaction [] []
[2023-10-30T21:47:09.334956+03:00] doctrine.INFO: Disconnecting [] []
[2023-10-30T21:59:34.936207+03:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /var/www/vendor/symfony/error-handler/DebugClassLoader.php:335)"} []
[2023-10-30T21:59:35.245626+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:85/"" at /var/www/vendor/symfony/http-kernel/EventListener/RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:85/\" at /var/www/vendor/symfony/http-kernel/EventListener/RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:185)"} []
[2023-10-30T21:59:35.849583+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e1f395"},"request_uri":"http://localhost:85/_wdt/e1f395","method":"GET"} []
[2023-10-30T21:59:48.462660+03:00] request.INFO: Matched route "app_wheelbrand_getbrands". {"route":"app_wheelbrand_getbrands","route_parameters":{"_route":"app_wheelbrand_getbrands","_controller":"App\\Controller\\WheelBrandController::getBrands"},"request_uri":"http://localhost:85/wheelBrands","method":"GET"} []
[2023-10-30T21:59:48.476681+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-10-30T21:59:48.744848+03:00] request.CRITICAL: Uncaught PHP Exception Doctrine\ORM\Persisters\Exception\UnrecognizedField: "Unrecognized field: App\Entity\Wheels::$title" at /var/www/vendor/doctrine/orm/lib/Doctrine/ORM/Persisters/Exception/UnrecognizedField.php line 22 {"exception":"[object] (Doctrine\\ORM\\Persisters\\Exception\\UnrecognizedField(code: 0): Unrecognized field: App\\Entity\\Wheels::$title at /var/www/vendor/doctrine/orm/lib/Doctrine/ORM/Persisters/Exception/UnrecognizedField.php:22)"} []
[2023-10-30T21:59:49.904982+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7fc3a9"},"request_uri":"http://localhost:85/_wdt/7fc3a9","method":"GET"} []
[2023-10-30T22:00:19.325492+03:00] request.INFO: Matched route "app_wheelbrand_getbrands". {"route":"app_wheelbrand_getbrands","route_parameters":{"_route":"app_wheelbrand_getbrands","_controller":"App\\Controller\\WheelBrandController::getBrands"},"request_uri":"http://localhost:85/wheelBrands","method":"GET"} []
[2023-10-30T22:00:19.331372+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-10-30T22:00:19.485811+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"db","port":5432,"user":"base","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"base","serverVersion":"15","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"db","port":5432,"user":"base","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"base","serverVersion":"15","charset":"utf8"}} []
[2023-10-30T22:00:19.607868+03:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.slug AS slug_2, t0.wheel_brand AS wheel_brand_3 FROM wheels t0 ORDER BY t0.wheel_brand ASC {"sql":"SELECT t0.id AS id_1, t0.slug AS slug_2, t0.wheel_brand AS wheel_brand_3 FROM wheels t0 ORDER BY t0.wheel_brand ASC"} []
[2023-10-30T22:00:19.831437+03:00] doctrine.INFO: Disconnecting [] []
[2023-10-30T22:05:39.244403+03:00] request.INFO: Matched route "app_wheelbrand_getbrands". {"route":"app_wheelbrand_getbrands","route_parameters":{"_route":"app_wheelbrand_getbrands","_controller":"App\\Controller\\WheelBrandController::getBrands"},"request_uri":"http://localhost:85/wheelBrands","method":"GET"} []
[2023-10-30T22:05:39.252472+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-10-30T22:05:39.355587+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"db","port":5432,"user":"base","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"base","serverVersion":"15","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"db","port":5432,"user":"base","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"base","serverVersion":"15","charset":"utf8"}} []
[2023-10-30T22:05:39.396927+03:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.slug AS slug_2, t0.wheel_brand AS wheel_brand_3 FROM wheels t0 ORDER BY t0.wheel_brand ASC {"sql":"SELECT t0.id AS id_1, t0.slug AS slug_2, t0.wheel_brand AS wheel_brand_3 FROM wheels t0 ORDER BY t0.wheel_brand ASC"} []
[2023-10-30T22:05:39.516133+03:00] doctrine.INFO: Disconnecting [] []
[2023-10-31T19:19:07.446263+03:00] request.INFO: Matched route "app_wheelbrand_getbrands". {"route":"app_wheelbrand_getbrands","route_parameters":{"_route":"app_wheelbrand_getbrands","_controller":"App\\Controller\\WheelBrandController::getBrands"},"request_uri":"http://localhost:85/wheelBrands","method":"GET"} []
[2023-10-31T19:19:07.607011+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-10-31T19:19:08.061168+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"db","port":5432,"user":"base","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"base","serverVersion":"15","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"db","port":5432,"user":"base","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"base","serverVersion":"15","charset":"utf8"}} []
[2023-10-31T19:19:08.320441+03:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.slug AS slug_2, t0.wheel_brand AS wheel_brand_3 FROM wheels t0 ORDER BY t0.wheel_brand ASC {"sql":"SELECT t0.id AS id_1, t0.slug AS slug_2, t0.wheel_brand AS wheel_brand_3 FROM wheels t0 ORDER BY t0.wheel_brand ASC"} []
[2023-10-31T19:19:09.598979+03:00] doctrine.INFO: Disconnecting [] []
[2023-10-31T19:19:43.116344+03:00] request.INFO: Matched route "app_wheelbrand_getbrands". {"route":"app_wheelbrand_getbrands","route_parameters":{"_route":"app_wheelbrand_getbrands","_controller":"App\\Controller\\WheelBrandController::getBrands"},"request_uri":"http://localhost:85/wheelBrands","method":"GET"} []
[2023-10-31T19:19:43.134503+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-10-31T19:19:43.313947+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"db","port":5432,"user":"base","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"base","serverVersion":"15","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"db","port":5432,"user":"base","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"base","serverVersion":"15","charset":"utf8"}} []
[2023-10-31T19:19:43.345527+03:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.slug AS slug_2, t0.wheel_brand AS wheel_brand_3 FROM wheels t0 ORDER BY t0.wheel_brand ASC {"sql":"SELECT t0.id AS id_1, t0.slug AS slug_2, t0.wheel_brand AS wheel_brand_3 FROM wheels t0 ORDER BY t0.wheel_brand ASC"} []
[2023-10-31T19:19:43.681013+03:00] doctrine.INFO: Disconnecting [] []
[2023-10-31T19:35:37.053956+03:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /var/www/vendor/symfony/error-handler/DebugClassLoader.php:335)"} []
[2023-10-31T19:35:37.278451+03:00] request.INFO: Matched route "app_wheelbrand_getbrands". {"route":"app_wheelbrand_getbrands","route_parameters":{"_route":"app_wheelbrand_getbrands","_controller":"App\\Controller\\WheelBrandController::getBrands"},"request_uri":"http://localhost:85/wheelBrands","method":"GET"} []
[2023-10-31T19:35:37.286295+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-10-31T19:35:37.378836+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"db","port":5432,"user":"base","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"base","serverVersion":"15","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"db","port":5432,"user":"base","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"base","serverVersion":"15","charset":"utf8"}} []
[2023-10-31T19:35:37.454710+03:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.slug AS slug_2, t0.wheel_brand AS wheel_brand_3 FROM wheels t0 ORDER BY t0.wheel_brand ASC {"sql":"SELECT t0.id AS id_1, t0.slug AS slug_2, t0.wheel_brand AS wheel_brand_3 FROM wheels t0 ORDER BY t0.wheel_brand ASC"} []
[2023-10-31T19:35:38.023739+03:00] doctrine.INFO: Disconnecting [] []
[2023-10-31T19:50:56.103847+03:00] request.INFO: Matched route "app_wheelbrand_getbrands". {"route":"app_wheelbrand_getbrands","route_parameters":{"_route":"app_wheelbrand_getbrands","_controller":"App\\Controller\\WheelBrandController::getBrands"},"request_uri":"http://localhost:85/wheelBrands","method":"GET"} []
[2023-10-31T19:50:56.111174+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-10-31T19:50:56.222527+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"db","port":5432,"user":"base","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"base","serverVersion":"15","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"db","port":5432,"user":"base","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"base","serverVersion":"15","charset":"utf8"}} []
[2023-10-31T19:50:56.232278+03:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.slug AS slug_2, t0.wheel_brand AS wheel_brand_3 FROM wheels t0 ORDER BY t0.wheel_brand ASC {"sql":"SELECT t0.id AS id_1, t0.slug AS slug_2, t0.wheel_brand AS wheel_brand_3 FROM wheels t0 ORDER BY t0.wheel_brand ASC"} []
[2023-10-31T19:50:56.353831+03:00] doctrine.INFO: Disconnecting [] []
[2023-10-31T19:55:07.144807+03:00] request.INFO: Matched route "app_wheelbrand_getbrands". {"route":"app_wheelbrand_getbrands","route_parameters":{"_route":"app_wheelbrand_getbrands","_controller":"App\\Controller\\WheelBrandController::getBrands"},"request_uri":"http://localhost:85/wheelBrands","method":"GET"} []
[2023-10-31T19:55:07.152818+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-10-31T19:55:07.253451+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"db","port":5432,"user":"base","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"base","serverVersion":"15","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"db","port":5432,"user":"base","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"base","serverVersion":"15","charset":"utf8"}} []
[2023-10-31T19:55:07.262377+03:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.slug AS slug_2, t0.wheel_brand AS wheel_brand_3 FROM wheels t0 ORDER BY t0.wheel_brand ASC {"sql":"SELECT t0.id AS id_1, t0.slug AS slug_2, t0.wheel_brand AS wheel_brand_3 FROM wheels t0 ORDER BY t0.wheel_brand ASC"} []
[2023-10-31T19:55:07.385156+03:00] doctrine.INFO: Disconnecting [] []
[2023-10-31T19:55:16.776129+03:00] request.INFO: Matched route "app_wheelbrand_getbrands". {"route":"app_wheelbrand_getbrands","route_parameters":{"_route":"app_wheelbrand_getbrands","_controller":"App\\Controller\\WheelBrandController::getBrands"},"request_uri":"http://localhost:85/wheelBrands","method":"GET"} []
[2023-10-31T19:55:16.782877+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-10-31T19:55:16.881606+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"db","port":5432,"user":"base","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"base","serverVersion":"15","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"db","port":5432,"user":"base","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"base","serverVersion":"15","charset":"utf8"}} []
[2023-10-31T19:55:16.891454+03:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.slug AS slug_2, t0.wheel_brand AS wheel_brand_3 FROM wheels t0 ORDER BY t0.wheel_brand ASC {"sql":"SELECT t0.id AS id_1, t0.slug AS slug_2, t0.wheel_brand AS wheel_brand_3 FROM wheels t0 ORDER BY t0.wheel_brand ASC"} []
[2023-10-31T19:55:17.018453+03:00] doctrine.INFO: Disconnecting [] []
[2023-10-31T20:00:13.442941+03:00] request.INFO: Matched route "app_wheelbrand_getbrands". {"route":"app_wheelbrand_getbrands","route_parameters":{"_route":"app_wheelbrand_getbrands","_controller":"App\\Controller\\WheelBrandController::getBrands"},"request_uri":"http://localhost:85/wheelBrands","method":"GET"} []
[2023-10-31T20:00:13.449945+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-10-31T20:00:13.559747+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"db","port":5432,"user":"base","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"base","serverVersion":"15","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"db","port":5432,"user":"base","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"base","serverVersion":"15","charset":"utf8"}} []
[2023-10-31T20:00:13.568739+03:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.slug AS slug_2, t0.wheel_brand AS wheel_brand_3 FROM wheels t0 ORDER BY t0.wheel_brand ASC {"sql":"SELECT t0.id AS id_1, t0.slug AS slug_2, t0.wheel_brand AS wheel_brand_3 FROM wheels t0 ORDER BY t0.wheel_brand ASC"} []
[2023-10-31T20:00:13.587015+03:00] php.CRITICAL: Uncaught Error: App\Services\ServiceWheelsRepository::getBrands(): Return value must be of type array, null returned {"exception":"[object] (TypeError(code: 0): App\\Services\\ServiceWheelsRepository::getBrands(): Return value must be of type array, null returned at /var/www/src/Services/ServiceWheelsRepository.php:30)"} []
[2023-10-31T20:00:13.621588+03:00] request.CRITICAL: Uncaught PHP Exception TypeError: "App\Services\ServiceWheelsRepository::getBrands(): Return value must be of type array, null returned" at /var/www/src/Services/ServiceWheelsRepository.php line 30 {"exception":"[object] (TypeError(code: 0): App\\Services\\ServiceWheelsRepository::getBrands(): Return value must be of type array, null returned at /var/www/src/Services/ServiceWheelsRepository.php:30)"} []
[2023-10-31T20:00:13.956917+03:00] doctrine.INFO: Disconnecting [] []
[2023-10-31T20:00:14.204041+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f4d5c1"},"request_uri":"http://localhost:85/_wdt/f4d5c1","method":"GET"} []
[2023-10-31T20:05:49.772791+03:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /var/www/vendor/symfony/error-handler/DebugClassLoader.php:335)"} []
[2023-10-31T20:05:49.802445+03:00] request.INFO: Matched route "app_wheelbrand_getbrands". {"route":"app_wheelbrand_getbrands","route_parameters":{"_route":"app_wheelbrand_getbrands","_controller":"App\\Controller\\WheelBrandController::getBrands"},"request_uri":"http://localhost:85/wheelBrands","method":"GET"} []
[2023-10-31T20:05:49.804195+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-10-31T20:05:49.873113+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"db","port":5432,"user":"base","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"base","serverVersion":"15","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"db","port":5432,"user":"base","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"base","serverVersion":"15","charset":"utf8"}} []
[2023-10-31T20:05:49.881831+03:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.slug AS slug_2, t0.wheel_brand AS wheel_brand_3 FROM wheels t0 ORDER BY t0.wheel_brand ASC {"sql":"SELECT t0.id AS id_1, t0.slug AS slug_2, t0.wheel_brand AS wheel_brand_3 FROM wheels t0 ORDER BY t0.wheel_brand ASC"} []
[2023-10-31T20:05:50.042036+03:00] doctrine.INFO: Disconnecting [] []
[2023-10-31T20:36:38.002341+03:00] request.INFO: Matched route "app_wheelbrand_getbrands". {"route":"app_wheelbrand_getbrands","route_parameters":{"_route":"app_wheelbrand_getbrands","_controller":"App\\Controller\\WheelBrandController::getBrands"},"request_uri":"http://localhost:85/wheelBrands","method":"GET"} []
[2023-10-31T20:36:38.008732+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-10-31T20:36:38.121448+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"db","port":5432,"user":"base","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"base","serverVersion":"15","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"db","port":5432,"user":"base","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"base","serverVersion":"15","charset":"utf8"}} []
[2023-10-31T20:36:38.130871+03:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.slug AS slug_2, t0.wheel_brand AS wheel_brand_3 FROM wheels t0 ORDER BY t0.wheel_brand ASC {"sql":"SELECT t0.id AS id_1, t0.slug AS slug_2, t0.wheel_brand AS wheel_brand_3 FROM wheels t0 ORDER BY t0.wheel_brand ASC"} []
[2023-10-31T20:36:38.306091+03:00] doctrine.INFO: Disconnecting [] []
[2023-11-01T22:26:35.305507+03:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /var/www/vendor/symfony/error-handler/DebugClassLoader.php:335)"} []
[2023-11-01T22:26:35.768922+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:49100/"" at /var/www/vendor/symfony/http-kernel/EventListener/RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:49100/\" at /var/www/vendor/symfony/http-kernel/EventListener/RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:185)"} []
[2023-11-01T22:26:37.169095+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d4e6e0"},"request_uri":"http://localhost:49100/_wdt/d4e6e0","method":"GET"} []
[2023-11-01T22:27:27.984829+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:49100/"" at /var/www/vendor/symfony/http-kernel/EventListener/RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:49100/\" at /var/www/vendor/symfony/http-kernel/EventListener/RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:185)"} []
[2023-11-01T22:27:28.724707+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"95aa11"},"request_uri":"http://localhost:49100/_wdt/95aa11","method":"GET"} []
[2023-11-01T22:27:30.594419+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:49100/"" at /var/www/vendor/symfony/http-kernel/EventListener/RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:49100/\" at /var/www/vendor/symfony/http-kernel/EventListener/RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:185)"} []
[2023-11-01T22:27:31.317844+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7bc84c"},"request_uri":"http://localhost:49100/_wdt/7bc84c","method":"GET"} []
[2023-11-04T20:41:56.142377+03:00] console.CRITICAL: Error thrown while running command "'micgrations:make'". Message: "There are no commands defined in the "micgrations" namespace." {"exception":"[object] (Symfony\\Component\\Console\\Exception\\NamespaceNotFoundException(code: 0): There are no commands defined in the \"micgrations\" namespace. at /home/simonchik/IdeaProjects/victory/vendor/symfony/console/Application.php:624)","command":"'micgrations:make'","message":"There are no commands defined in the \"micgrations\" namespace."} []
[2023-11-04T20:42:09.698170+03:00] console.CRITICAL: Error thrown while running command "'make:'". Message: "Command "make:" is ambiguous. Did you mean one of these?     make:auth                  Creates a Guard authenticator of different flavors     make:command               Creates a new console command class     make:twig-component        Creates a twig (or live) component     make:controller            Creates a new controller class     make:crud                  Creates CRUD for Doctrine entity class     make:docker:database       Adds a database container to your docker-compose.yaml file     make:entity                Creates or updates a Doctrine entity class, and optionally an API Platform resource     make:fixtures              Creates a new class to load Doctrine fixtures     make:form                  Creates a new form class     make:message               Creates a new message and handler     make:messenger-middleware  Creates a new messenger middleware     make:registration-form     Creates a new registration form system     make:reset-password        Create controller, entity, and repositories for use with symfonycasts/reset-password-bundle     make:serializer:encoder    Creates a new serializer encoder class     make:serializer:normalizer Creates a new serializer normalizer class     make:subscriber            Creates a new event subscriber class     make:twig-extension        Creates a new Twig extension with its runtime class     make:test                  Creates a new test class     make:validator             Creates a new validator and constraint class     make:voter                 Creates a new security voter class     make:user                  Creates a new security user class     make:migration             Creates a new migration based on database changes     make:stimulus-controller   Creates a new Stimulus controller     make:security:form-login   Generate the code needed for the form_login authenticator." {"exception":"[object] (Symfony\\Component\\Console\\Exception\\CommandNotFoundException(code: 0): Command \"make:\" is ambiguous.\nDid you mean one of these?\n    make:auth                  Creates a Guard authenticator of different flavors\n    make:command               Creates a new console command class\n    make:twig-component        Creates a twig (or live) component\n    make:controller            Creates a new controller class\n    make:crud                  Creates CRUD for Doctrine entity class\n    make:docker:database       Adds a database container to your docker-compose.yaml file\n    make:entity                Creates or updates a Doctrine entity class, and optionally an API Platform resource\n    make:fixtures              Creates a new class to load Doctrine fixtures\n    make:form                  Creates a new form class\n    make:message               Creates a new message and handler\n    make:messenger-middleware  Creates a new messenger middleware\n    make:registration-form     Creates a new registration form system\n    make:reset-password        Create controller, entity, and repositories for use with symfonycasts/reset-password-bundle\n    make:serializer:encoder    Creates a new serializer encoder class\n    make:serializer:normalizer Creates a new serializer normalizer class\n    make:subscriber            Creates a new event subscriber class\n    make:twig-extension        Creates a new Twig extension with its runtime class\n    make:test                  Creates a new test class\n    make:validator             Creates a new validator and constraint class\n    make:voter                 Creates a new security voter class\n    make:user                  Creates a new security user class\n    make:migration             Creates a new migration based on database changes\n    make:stimulus-controller   Creates a new Stimulus controller\n    make:security:form-login   Generate the code needed for the form_login authenticator. at /home/simonchik/IdeaProjects/victory/vendor/symfony/console/Application.php:735)","command":"'make:'","message":"Command \"make:\" is ambiguous.\nDid you mean one of these?\n    make:auth                  Creates a Guard authenticator of different flavors\n    make:command               Creates a new console command class\n    make:twig-component        Creates a twig (or live) component\n    make:controller            Creates a new controller class\n    make:crud                  Creates CRUD for Doctrine entity class\n    make:docker:database       Adds a database container to your docker-compose.yaml file\n    make:entity                Creates or updates a Doctrine entity class, and optionally an API Platform resource\n    make:fixtures              Creates a new class to load Doctrine fixtures\n    make:form                  Creates a new form class\n    make:message               Creates a new message and handler\n    make:messenger-middleware  Creates a new messenger middleware\n    make:registration-form     Creates a new registration form system\n    make:reset-password        Create controller, entity, and repositories for use with symfonycasts/reset-password-bundle\n    make:serializer:encoder    Creates a new serializer encoder class\n    make:serializer:normalizer Creates a new serializer normalizer class\n    make:subscriber            Creates a new event subscriber class\n    make:twig-extension        Creates a new Twig extension with its runtime class\n    make:test                  Creates a new test class\n    make:validator             Creates a new validator and constraint class\n    make:voter                 Creates a new security voter class\n    make:user                  Creates a new security user class\n    make:migration             Creates a new migration based on database changes\n    make:stimulus-controller   Creates a new Stimulus controller\n    make:security:form-login   Generate the code needed for the form_login authenticator."} []
[2023-11-04T20:42:19.781681+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":49101,"user":"app","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":49101,"user":"app","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"}} []
[2023-11-04T20:42:19.807733+03:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "An exception occurred in the driver: SQLSTATE[HY000] [1045] Access denied for user 'app'@'192.168.32.1' (using password: YES)" {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 1045): An exception occurred in the driver: SQLSTATE[HY000] [1045] Access denied for user 'app'@'192.168.32.1' (using password: YES) at /home/simonchik/IdeaProjects/victory/vendor/doctrine/dbal/src/Driver/API/MySQL/ExceptionConverter.php:101)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 1045): SQLSTATE[HY000] [1045] Access denied for user 'app'@'192.168.32.1' (using password: YES) at /home/simonchik/IdeaProjects/victory/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:28)\n[previous exception] [object] (PDOException(code: 1045): SQLSTATE[HY000] [1045] Access denied for user 'app'@'192.168.32.1' (using password: YES) at /home/simonchik/IdeaProjects/victory/vendor/doctrine/dbal/src/Driver/PDO/MySQL/Driver.php:34)","command":"make:migration","message":"An exception occurred in the driver: SQLSTATE[HY000] [1045] Access denied for user 'app'@'192.168.32.1' (using password: YES)"} []
[2023-11-04T20:42:19.808134+03:00] console.DEBUG: Command "make:migration" exited with code "1045" {"command":"make:migration","code":1045} []
[2023-11-04T20:42:52.302428+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":49101,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":49101,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"}} []
[2023-11-04T20:42:52.307812+03:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "An exception occurred in the driver: SQLSTATE[HY000] [1045] Access denied for user 'dev'@'192.168.32.1' (using password: YES)" {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 1045): An exception occurred in the driver: SQLSTATE[HY000] [1045] Access denied for user 'dev'@'192.168.32.1' (using password: YES) at /home/simonchik/IdeaProjects/victory/vendor/doctrine/dbal/src/Driver/API/MySQL/ExceptionConverter.php:101)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 1045): SQLSTATE[HY000] [1045] Access denied for user 'dev'@'192.168.32.1' (using password: YES) at /home/simonchik/IdeaProjects/victory/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:28)\n[previous exception] [object] (PDOException(code: 1045): SQLSTATE[HY000] [1045] Access denied for user 'dev'@'192.168.32.1' (using password: YES) at /home/simonchik/IdeaProjects/victory/vendor/doctrine/dbal/src/Driver/PDO/MySQL/Driver.php:34)","command":"make:migration","message":"An exception occurred in the driver: SQLSTATE[HY000] [1045] Access denied for user 'dev'@'192.168.32.1' (using password: YES)"} []
[2023-11-04T20:42:52.308209+03:00] console.DEBUG: Command "make:migration" exited with code "1045" {"command":"make:migration","code":1045} []
[2023-11-04T20:44:35.734143+03:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "Malformed parameter "url"." {"exception":"[object] (Doctrine\\DBAL\\Exception(code: 0): Malformed parameter \"url\". at /home/simonchik/IdeaProjects/victory/vendor/doctrine/doctrine-bundle/ConnectionFactory.php:240)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\MalformedDsnException(code: 0): Malformed database connection URL at /home/simonchik/IdeaProjects/victory/vendor/doctrine/dbal/src/Exception/MalformedDsnException.php:12)","command":"make:migration","message":"Malformed parameter \"url\"."} []
[2023-11-04T20:44:35.736679+03:00] console.DEBUG: Command "make:migration" exited with code "1" {"command":"make:migration","code":1} []
[2023-11-04T20:45:25.660246+03:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /home/simonchik/IdeaProjects/victory/vendor/symfony/error-handler/DebugClassLoader.php:335)"} []
[2023-11-04T20:45:25.697728+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"mysql","port":49101,"user":"example","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"mysql","port":49101,"user":"example","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"}} []
[2023-11-04T20:45:25.703422+03:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "An exception occurred in the driver: SQLSTATE[HY000] [2002] php_network_getaddresses: getaddrinfo for mysql failed: Temporary failure in name resolution" {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 2002): An exception occurred in the driver: SQLSTATE[HY000] [2002] php_network_getaddresses: getaddrinfo for mysql failed: Temporary failure in name resolution at /home/simonchik/IdeaProjects/victory/vendor/doctrine/dbal/src/Driver/API/MySQL/ExceptionConverter.php:101)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 2002): SQLSTATE[HY000] [2002] php_network_getaddresses: getaddrinfo for mysql failed: Temporary failure in name resolution at /home/simonchik/IdeaProjects/victory/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:28)\n[previous exception] [object] (PDOException(code: 2002): SQLSTATE[HY000] [2002] php_network_getaddresses: getaddrinfo for mysql failed: Temporary failure in name resolution at /home/simonchik/IdeaProjects/victory/vendor/doctrine/dbal/src/Driver/PDO/MySQL/Driver.php:34)\n[previous exception] [object] (PDOException(code: 0): PDO::__construct(): php_network_getaddresses: getaddrinfo for mysql failed: Temporary failure in name resolution at /home/simonchik/IdeaProjects/victory/vendor/doctrine/dbal/src/Driver/PDO/MySQL/Driver.php:34)","command":"make:migration","message":"An exception occurred in the driver: SQLSTATE[HY000] [2002] php_network_getaddresses: getaddrinfo for mysql failed: Temporary failure in name resolution"} []
[2023-11-04T20:45:25.704098+03:00] console.DEBUG: Command "make:migration" exited with code "2002" {"command":"make:migration","code":2002} []
[2023-11-04T20:45:47.299329+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":49101,"user":"example","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":49101,"user":"example","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"}} []
[2023-11-04T20:45:47.305811+03:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "An exception occurred in the driver: SQLSTATE[HY000] [1045] Access denied for user 'example'@'192.168.32.1' (using password: YES)" {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 1045): An exception occurred in the driver: SQLSTATE[HY000] [1045] Access denied for user 'example'@'192.168.32.1' (using password: YES) at /home/simonchik/IdeaProjects/victory/vendor/doctrine/dbal/src/Driver/API/MySQL/ExceptionConverter.php:101)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 1045): SQLSTATE[HY000] [1045] Access denied for user 'example'@'192.168.32.1' (using password: YES) at /home/simonchik/IdeaProjects/victory/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:28)\n[previous exception] [object] (PDOException(code: 1045): SQLSTATE[HY000] [1045] Access denied for user 'example'@'192.168.32.1' (using password: YES) at /home/simonchik/IdeaProjects/victory/vendor/doctrine/dbal/src/Driver/PDO/MySQL/Driver.php:34)","command":"make:migration","message":"An exception occurred in the driver: SQLSTATE[HY000] [1045] Access denied for user 'example'@'192.168.32.1' (using password: YES)"} []
[2023-11-04T20:45:47.306213+03:00] console.DEBUG: Command "make:migration" exited with code "1045" {"command":"make:migration","code":1045} []
[2023-11-04T20:45:55.770384+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":49101,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":49101,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"}} []
[2023-11-04T20:45:55.777516+03:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "An exception occurred in the driver: SQLSTATE[HY000] [1045] Access denied for user 'dev'@'192.168.32.1' (using password: YES)" {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 1045): An exception occurred in the driver: SQLSTATE[HY000] [1045] Access denied for user 'dev'@'192.168.32.1' (using password: YES) at /home/simonchik/IdeaProjects/victory/vendor/doctrine/dbal/src/Driver/API/MySQL/ExceptionConverter.php:101)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 1045): SQLSTATE[HY000] [1045] Access denied for user 'dev'@'192.168.32.1' (using password: YES) at /home/simonchik/IdeaProjects/victory/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:28)\n[previous exception] [object] (PDOException(code: 1045): SQLSTATE[HY000] [1045] Access denied for user 'dev'@'192.168.32.1' (using password: YES) at /home/simonchik/IdeaProjects/victory/vendor/doctrine/dbal/src/Driver/PDO/MySQL/Driver.php:34)","command":"make:migration","message":"An exception occurred in the driver: SQLSTATE[HY000] [1045] Access denied for user 'dev'@'192.168.32.1' (using password: YES)"} []
[2023-11-04T20:45:55.778079+03:00] console.DEBUG: Command "make:migration" exited with code "1045" {"command":"make:migration","code":1045} []
[2023-11-04T20:46:25.280495+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":49101,"user":"example","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":49101,"user":"example","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"}} []
[2023-11-04T20:46:25.285908+03:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "An exception occurred in the driver: SQLSTATE[HY000] [1045] Access denied for user 'example'@'192.168.32.1' (using password: YES)" {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 1045): An exception occurred in the driver: SQLSTATE[HY000] [1045] Access denied for user 'example'@'192.168.32.1' (using password: YES) at /home/simonchik/IdeaProjects/victory/vendor/doctrine/dbal/src/Driver/API/MySQL/ExceptionConverter.php:101)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 1045): SQLSTATE[HY000] [1045] Access denied for user 'example'@'192.168.32.1' (using password: YES) at /home/simonchik/IdeaProjects/victory/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:28)\n[previous exception] [object] (PDOException(code: 1045): SQLSTATE[HY000] [1045] Access denied for user 'example'@'192.168.32.1' (using password: YES) at /home/simonchik/IdeaProjects/victory/vendor/doctrine/dbal/src/Driver/PDO/MySQL/Driver.php:34)","command":"make:migration","message":"An exception occurred in the driver: SQLSTATE[HY000] [1045] Access denied for user 'example'@'192.168.32.1' (using password: YES)"} []
[2023-11-04T20:46:25.286316+03:00] console.DEBUG: Command "make:migration" exited with code "1045" {"command":"make:migration","code":1045} []
[2023-11-04T20:47:59.024861+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":49101,"user":"password","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":49101,"user":"password","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"}} []
[2023-11-04T20:47:59.032063+03:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "An exception occurred in the driver: SQLSTATE[HY000] [1045] Access denied for user 'password'@'192.168.32.1' (using password: YES)" {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 1045): An exception occurred in the driver: SQLSTATE[HY000] [1045] Access denied for user 'password'@'192.168.32.1' (using password: YES) at /home/simonchik/IdeaProjects/victory/vendor/doctrine/dbal/src/Driver/API/MySQL/ExceptionConverter.php:101)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 1045): SQLSTATE[HY000] [1045] Access denied for user 'password'@'192.168.32.1' (using password: YES) at /home/simonchik/IdeaProjects/victory/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:28)\n[previous exception] [object] (PDOException(code: 1045): SQLSTATE[HY000] [1045] Access denied for user 'password'@'192.168.32.1' (using password: YES) at /home/simonchik/IdeaProjects/victory/vendor/doctrine/dbal/src/Driver/PDO/MySQL/Driver.php:34)","command":"make:migration","message":"An exception occurred in the driver: SQLSTATE[HY000] [1045] Access denied for user 'password'@'192.168.32.1' (using password: YES)"} []
[2023-11-04T20:47:59.032705+03:00] console.DEBUG: Command "make:migration" exited with code "1045" {"command":"make:migration","code":1045} []
[2023-11-04T20:48:12.961308+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":49101,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":49101,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"}} []
[2023-11-04T20:48:13.051660+03:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-11-04T20:48:13.090101+03:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"shop"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"shop"},"types":{"1":2}} []
[2023-11-04T20:48:13.113212+03:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-11-04T20:48:13.113729+03:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"shop"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"shop"},"types":{"1":2}} []
[2023-11-04T20:48:13.126640+03:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-11-04T20:48:13.127211+03:00] doctrine.DEBUG: Executing statement: SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,        c.COLUMN_TYPE        AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION (parameters: array{"1":"shop","2":"shop"}, types: array{"1":2,"2":2}) {"sql":"SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,\n       c.COLUMN_TYPE        AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION","params":{"1":"shop","2":"shop"},"types":{"1":2,"2":2}} []
[2023-11-04T20:48:13.142517+03:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"shop"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX","params":{"1":"shop"},"types":{"1":2}} []
[2023-11-04T20:48:13.144722+03:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'shop' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"shop"}, types: array{"1":2}) {"sql":"SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'shop' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"shop"},"types":{"1":2}} []
[2023-11-04T20:48:13.147034+03:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"shop"}, types: array{"1":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"shop"},"types":{"1":2}} []
[2023-11-04T20:48:13.166806+03:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-11-04T20:48:13.389746+03:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-11-04T20:48:13.501430+03:00] doctrine.INFO: Disconnecting [] []
[2023-11-04T20:48:59.466006+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":49101,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":49101,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"}} []
[2023-11-04T20:48:59.470169+03:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-11-04T20:49:01.630342+03:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-11-04T20:49:01.631868+03:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"shop"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"shop"},"types":{"1":2}} []
[2023-11-04T20:49:01.646154+03:00] doctrine.DEBUG: Executing statement: CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at DATETIME DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) DEFAULT CHARACTER SET utf8 COLLATE `utf8_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at DATETIME DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) DEFAULT CHARACTER SET utf8 COLLATE `utf8_unicode_ci` ENGINE = InnoDB"} []
[2023-11-04T20:49:02.655604+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-11-04T20:49:02.662608+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-11-04T20:49:02.663180+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-11-04T20:49:02.686365+03:00] doctrine.DEBUG: Beginning transaction [] []
[2023-11-04T20:49:02.755344+03:00] doctrine.DEBUG: Executing query: CREATE TABLE wheels_brand (id INT AUTO_INCREMENT NOT NULL, slug VARCHAR(255) NOT NULL, wheel_brand VARCHAR(255) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE wheels_brand (id INT AUTO_INCREMENT NOT NULL, slug VARCHAR(255) NOT NULL, wheel_brand VARCHAR(255) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2023-11-04T20:49:03.280040+03:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20231104174813","2":"2023-11-04 20:49:02","3":593}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20231104174813","2":"2023-11-04 20:49:02","3":593},"types":{"1":2,"2":2,"3":1}} []
[2023-11-04T20:49:03.419674+03:00] doctrine.INFO: Disconnecting [] []
[2023-11-04T20:52:44.213311+03:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /var/www/vendor/symfony/error-handler/DebugClassLoader.php:335)"} []
[2023-11-04T20:52:44.728729+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:49100/"" at /var/www/vendor/symfony/http-kernel/EventListener/RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:49100/\" at /var/www/vendor/symfony/http-kernel/EventListener/RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:185)"} []
[2023-11-04T20:52:45.228828+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"87e591"},"request_uri":"http://localhost:49100/_wdt/87e591","method":"GET"} []
[2023-11-04T20:53:25.018382+03:00] request.INFO: Matched route "app_wheelbrand_getbrands". {"route":"app_wheelbrand_getbrands","route_parameters":{"_route":"app_wheelbrand_getbrands","_controller":"App\\Controller\\WheelBrandController::getBrands"},"request_uri":"http://localhost:49100/wheelBrands","method":"GET"} []
[2023-11-04T20:53:25.049161+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-11-04T20:53:25.565490+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":49101,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":49101,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"}} []
[2023-11-04T20:53:25.648168+03:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ConnectionException: "An exception occurred in the driver: SQLSTATE[HY000] [2002] Connection refused" at /var/www/vendor/doctrine/dbal/src/Driver/API/MySQL/ExceptionConverter.php line 101 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 2002): An exception occurred in the driver: SQLSTATE[HY000] [2002] Connection refused at /var/www/vendor/doctrine/dbal/src/Driver/API/MySQL/ExceptionConverter.php:101)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 2002): SQLSTATE[HY000] [2002] Connection refused at /var/www/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:28)\n[previous exception] [object] (PDOException(code: 2002): SQLSTATE[HY000] [2002] Connection refused at /var/www/vendor/doctrine/dbal/src/Driver/PDO/MySQL/Driver.php:33)"} []
[2023-11-04T20:53:26.742137+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7a66b3"},"request_uri":"http://localhost:49100/_wdt/7a66b3","method":"GET"} []
[2023-11-04T20:53:53.883109+03:00] request.INFO: Matched route "app_wheelbrand_getbrands". {"route":"app_wheelbrand_getbrands","route_parameters":{"_route":"app_wheelbrand_getbrands","_controller":"App\\Controller\\WheelBrandController::getBrands"},"request_uri":"http://localhost:49100/wheelBrands","method":"GET"} []
[2023-11-04T20:53:53.907655+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-11-04T20:53:54.331608+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"mysql","port":49101,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"mysql","port":49101,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"}} []
[2023-11-04T20:53:54.485554+03:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ConnectionException: "An exception occurred in the driver: SQLSTATE[HY000] [2002] Connection refused" at /var/www/vendor/doctrine/dbal/src/Driver/API/MySQL/ExceptionConverter.php line 101 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 2002): An exception occurred in the driver: SQLSTATE[HY000] [2002] Connection refused at /var/www/vendor/doctrine/dbal/src/Driver/API/MySQL/ExceptionConverter.php:101)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 2002): SQLSTATE[HY000] [2002] Connection refused at /var/www/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:28)\n[previous exception] [object] (PDOException(code: 2002): SQLSTATE[HY000] [2002] Connection refused at /var/www/vendor/doctrine/dbal/src/Driver/PDO/MySQL/Driver.php:33)"} []
[2023-11-04T20:53:55.477936+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c152a3"},"request_uri":"http://localhost:49100/_wdt/c152a3","method":"GET"} []
[2023-11-04T20:54:35.197933+03:00] request.INFO: Matched route "app_wheelbrand_getbrands". {"route":"app_wheelbrand_getbrands","route_parameters":{"_route":"app_wheelbrand_getbrands","_controller":"App\\Controller\\WheelBrandController::getBrands"},"request_uri":"http://localhost:49100/wheelBrands","method":"GET"} []
[2023-11-04T20:54:35.219787+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-11-04T20:54:35.644540+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":49101,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":49101,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"}} []
[2023-11-04T20:54:35.717889+03:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ConnectionException: "An exception occurred in the driver: SQLSTATE[HY000] [2002] Connection refused" at /var/www/vendor/doctrine/dbal/src/Driver/API/MySQL/ExceptionConverter.php line 101 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 2002): An exception occurred in the driver: SQLSTATE[HY000] [2002] Connection refused at /var/www/vendor/doctrine/dbal/src/Driver/API/MySQL/ExceptionConverter.php:101)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 2002): SQLSTATE[HY000] [2002] Connection refused at /var/www/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:28)\n[previous exception] [object] (PDOException(code: 2002): SQLSTATE[HY000] [2002] Connection refused at /var/www/vendor/doctrine/dbal/src/Driver/PDO/MySQL/Driver.php:33)"} []
[2023-11-04T20:54:36.754294+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6c52ec"},"request_uri":"http://localhost:49100/_wdt/6c52ec","method":"GET"} []
[2023-11-04T20:55:52.040703+03:00] request.INFO: Matched route "app_wheelbrand_getbrands". {"route":"app_wheelbrand_getbrands","route_parameters":{"_route":"app_wheelbrand_getbrands","_controller":"App\\Controller\\WheelBrandController::getBrands"},"request_uri":"http://localhost:49100/wheelBrands","method":"GET"} []
[2023-11-04T20:55:52.065262+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-11-04T20:55:52.575657+03:00] request.CRITICAL: Uncaught PHP Exception Doctrine\ORM\Persisters\Exception\UnrecognizedField: "Unrecognized field: App\Entity\WheelsBrand::$wheel_brand" at /var/www/vendor/doctrine/orm/lib/Doctrine/ORM/Persisters/Exception/UnrecognizedField.php line 22 {"exception":"[object] (Doctrine\\ORM\\Persisters\\Exception\\UnrecognizedField(code: 0): Unrecognized field: App\\Entity\\WheelsBrand::$wheel_brand at /var/www/vendor/doctrine/orm/lib/Doctrine/ORM/Persisters/Exception/UnrecognizedField.php:22)"} []
[2023-11-04T20:55:53.283161+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"02960a"},"request_uri":"http://localhost:49100/_wdt/02960a","method":"GET"} []
[2023-11-04T20:56:38.141708+03:00] request.INFO: Matched route "app_wheelbrand_getbrands". {"route":"app_wheelbrand_getbrands","route_parameters":{"_route":"app_wheelbrand_getbrands","_controller":"App\\Controller\\WheelBrandController::getBrands"},"request_uri":"http://localhost:49100/wheelBrands","method":"GET"} []
[2023-11-04T20:56:38.163848+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-11-04T20:56:38.602009+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":49101,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":49101,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"}} []
[2023-11-04T20:56:38.702060+03:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ConnectionException: "An exception occurred in the driver: SQLSTATE[HY000] [2002] Connection refused" at /var/www/vendor/doctrine/dbal/src/Driver/API/MySQL/ExceptionConverter.php line 101 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 2002): An exception occurred in the driver: SQLSTATE[HY000] [2002] Connection refused at /var/www/vendor/doctrine/dbal/src/Driver/API/MySQL/ExceptionConverter.php:101)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 2002): SQLSTATE[HY000] [2002] Connection refused at /var/www/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:28)\n[previous exception] [object] (PDOException(code: 2002): SQLSTATE[HY000] [2002] Connection refused at /var/www/vendor/doctrine/dbal/src/Driver/PDO/MySQL/Driver.php:33)"} []
[2023-11-04T20:56:39.879583+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"be4517"},"request_uri":"http://localhost:49100/_wdt/be4517","method":"GET"} []
[2023-11-04T20:58:56.570996+03:00] request.INFO: Matched route "app_wheelbrand_getbrands". {"route":"app_wheelbrand_getbrands","route_parameters":{"_route":"app_wheelbrand_getbrands","_controller":"App\\Controller\\WheelBrandController::getBrands"},"request_uri":"http://localhost:49100/wheelBrands","method":"GET"} []
[2023-11-04T20:58:56.593420+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-11-04T20:58:57.010019+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"}} []
[2023-11-04T20:58:57.080472+03:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ConnectionException: "An exception occurred in the driver: SQLSTATE[HY000] [2002] Connection refused" at /var/www/vendor/doctrine/dbal/src/Driver/API/MySQL/ExceptionConverter.php line 101 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 2002): An exception occurred in the driver: SQLSTATE[HY000] [2002] Connection refused at /var/www/vendor/doctrine/dbal/src/Driver/API/MySQL/ExceptionConverter.php:101)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 2002): SQLSTATE[HY000] [2002] Connection refused at /var/www/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:28)\n[previous exception] [object] (PDOException(code: 2002): SQLSTATE[HY000] [2002] Connection refused at /var/www/vendor/doctrine/dbal/src/Driver/PDO/MySQL/Driver.php:33)"} []
[2023-11-04T20:58:58.363113+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c3beeb"},"request_uri":"http://localhost:49100/_wdt/c3beeb","method":"GET"} []
[2023-11-04T20:59:18.551625+03:00] request.INFO: Matched route "app_wheelbrand_getbrands". {"route":"app_wheelbrand_getbrands","route_parameters":{"_route":"app_wheelbrand_getbrands","_controller":"App\\Controller\\WheelBrandController::getBrands"},"request_uri":"http://localhost:49100/wheelBrands","method":"GET"} []
[2023-11-04T20:59:18.574409+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-11-04T20:59:18.985507+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"mysql","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"mysql","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"}} []
[2023-11-04T20:59:19.010236+03:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.slug AS slug_2, t0.wheel_brand AS wheel_brand_3 FROM wheels_brand t0 ORDER BY t0.wheel_brand ASC {"sql":"SELECT t0.id AS id_1, t0.slug AS slug_2, t0.wheel_brand AS wheel_brand_3 FROM wheels_brand t0 ORDER BY t0.wheel_brand ASC"} []
[2023-11-04T20:59:19.609630+03:00] doctrine.INFO: Disconnecting [] []
[2023-11-04T21:16:26.342416+03:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /var/www/vendor/symfony/error-handler/DebugClassLoader.php:335)"} []
[2023-11-04T21:16:26.850168+03:00] request.INFO: Matched route "app_wheelbrand_getbrands". {"route":"app_wheelbrand_getbrands","route_parameters":{"_route":"app_wheelbrand_getbrands","_controller":"App\\Controller\\WheelBrandController::getBrands"},"request_uri":"http://localhost:49100/wheelBrands","method":"GET"} []
[2023-11-04T21:16:26.866308+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-11-04T21:16:27.254178+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"mysql","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"mysql","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"}} []
[2023-11-04T21:16:27.260990+03:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.slug AS slug_2, t0.wheel_brand AS wheel_brand_3 FROM wheels_brand t0 ORDER BY t0.wheel_brand ASC {"sql":"SELECT t0.id AS id_1, t0.slug AS slug_2, t0.wheel_brand AS wheel_brand_3 FROM wheels_brand t0 ORDER BY t0.wheel_brand ASC"} []
[2023-11-04T21:17:29.680608+03:00] doctrine.INFO: Disconnecting [] []
[2023-11-04T21:18:19.871679+03:00] request.INFO: Matched route "app_wheelbrand_getbrands". {"route":"app_wheelbrand_getbrands","route_parameters":{"_route":"app_wheelbrand_getbrands","_controller":"App\\Controller\\WheelBrandController::getBrands"},"request_uri":"http://localhost:49100/wheelBrands","method":"GET"} []
[2023-11-04T21:18:19.895075+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-11-04T21:18:20.391942+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"mysql","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"mysql","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"}} []
[2023-11-04T21:18:20.400175+03:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.slug AS slug_2, t0.wheel_brand AS wheel_brand_3 FROM wheels_brand t0 ORDER BY t0.wheel_brand ASC {"sql":"SELECT t0.id AS id_1, t0.slug AS slug_2, t0.wheel_brand AS wheel_brand_3 FROM wheels_brand t0 ORDER BY t0.wheel_brand ASC"} []
[2023-11-04T21:18:20.844613+03:00] doctrine.INFO: Disconnecting [] []
[2023-11-04T21:18:36.005986+03:00] request.INFO: Matched route "app_wheelbrand_getbrands". {"route":"app_wheelbrand_getbrands","route_parameters":{"_route":"app_wheelbrand_getbrands","_controller":"App\\Controller\\WheelBrandController::getBrands"},"request_uri":"http://localhost:49100/wheelBrands","method":"GET"} []
[2023-11-04T21:18:36.035165+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-11-04T21:19:07.213195+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"mysql","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"mysql","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"}} []
[2023-11-04T21:19:07.219013+03:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.slug AS slug_2, t0.wheel_brand AS wheel_brand_3 FROM wheels_brand t0 ORDER BY t0.wheel_brand ASC {"sql":"SELECT t0.id AS id_1, t0.slug AS slug_2, t0.wheel_brand AS wheel_brand_3 FROM wheels_brand t0 ORDER BY t0.wheel_brand ASC"} []
[2023-11-04T21:20:06.010690+03:00] doctrine.INFO: Disconnecting [] []
[2023-11-04T21:20:35.847066+03:00] request.INFO: Matched route "app_wheelbrand_getbrands". {"route":"app_wheelbrand_getbrands","route_parameters":{"_route":"app_wheelbrand_getbrands","_controller":"App\\Controller\\WheelBrandController::getBrands"},"request_uri":"http://localhost:49100/wheelBrands","method":"GET"} []
[2023-11-04T21:20:35.876402+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-11-04T21:21:23.724506+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"mysql","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"mysql","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"}} []
[2023-11-04T21:21:23.730883+03:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.slug AS slug_2, t0.wheel_brand AS wheel_brand_3 FROM wheels_brand t0 ORDER BY t0.wheel_brand ASC {"sql":"SELECT t0.id AS id_1, t0.slug AS slug_2, t0.wheel_brand AS wheel_brand_3 FROM wheels_brand t0 ORDER BY t0.wheel_brand ASC"} []
[2023-11-04T21:21:24.071082+03:00] doctrine.INFO: Disconnecting [] []
[2023-11-04T21:21:40.290380+03:00] request.INFO: Matched route "app_wheelbrand_getbrands". {"route":"app_wheelbrand_getbrands","route_parameters":{"_route":"app_wheelbrand_getbrands","_controller":"App\\Controller\\WheelBrandController::getBrands"},"request_uri":"http://localhost:49100/wheelBrands","method":"GET"} []
[2023-11-04T21:21:40.316970+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-11-04T21:22:15.533382+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"mysql","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"mysql","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"}} []
[2023-11-04T21:22:15.540799+03:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.slug AS slug_2, t0.wheel_brand AS wheel_brand_3 FROM wheels_brand t0 ORDER BY t0.wheel_brand ASC {"sql":"SELECT t0.id AS id_1, t0.slug AS slug_2, t0.wheel_brand AS wheel_brand_3 FROM wheels_brand t0 ORDER BY t0.wheel_brand ASC"} []
[2023-11-04T21:22:15.919647+03:00] doctrine.INFO: Disconnecting [] []
[2023-11-04T21:22:59.929983+03:00] request.INFO: Matched route "app_wheelbrand_getbrands". {"route":"app_wheelbrand_getbrands","route_parameters":{"_route":"app_wheelbrand_getbrands","_controller":"App\\Controller\\WheelBrandController::getBrands"},"request_uri":"http://localhost:49100/wheelBrands","method":"GET"} []
[2023-11-04T21:22:59.953647+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-11-04T21:24:10.934980+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"mysql","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"mysql","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"}} []
[2023-11-04T21:24:10.941676+03:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.slug AS slug_2, t0.wheel_brand AS wheel_brand_3 FROM wheels_brand t0 ORDER BY t0.wheel_brand ASC {"sql":"SELECT t0.id AS id_1, t0.slug AS slug_2, t0.wheel_brand AS wheel_brand_3 FROM wheels_brand t0 ORDER BY t0.wheel_brand ASC"} []
[2023-11-04T21:25:04.289801+03:00] doctrine.INFO: Disconnecting [] []
[2023-11-06T20:49:17.087479+03:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /home/simonchik/IdeaProjects/victory/vendor/symfony/error-handler/DebugClassLoader.php:335)"} []
[2023-11-06T20:49:17.114413+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.en.xlf {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":2,"file":"/home/simonchik/IdeaProjects/victory/vendor/symfony/config/Resource/FileResource.php","line":61,"trace":[{"file":"/home/simonchik/IdeaProjects/victory/vendor/symfony/config/Resource/SelfCheckingResourceChecker.php","line":44,"function":"isFresh","class":"Symfony\\Component\\Config\\Resource\\FileResource","type":"->"}],"count":1}}} []
[2023-11-06T20:49:17.138489+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.af.xlf [] []
[2023-11-06T20:49:17.152623+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.ar.xlf [] []
[2023-11-06T20:49:17.167693+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.az.xlf [] []
[2023-11-06T20:49:17.182349+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.be.xlf [] []
[2023-11-06T20:49:17.197592+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.bg.xlf [] []
[2023-11-06T20:49:17.214060+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.bs.xlf [] []
[2023-11-06T20:49:17.232375+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.ca.xlf [] []
[2023-11-06T20:49:17.247715+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.cs.xlf [] []
[2023-11-06T20:49:17.263302+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.cy.xlf [] []
[2023-11-06T20:49:17.270959+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.da.xlf [] []
[2023-11-06T20:49:17.286733+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.de.xlf [] []
[2023-11-06T20:49:17.301929+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.el.xlf [] []
[2023-11-06T20:49:17.316465+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.es.xlf [] []
[2023-11-06T20:49:17.331191+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.et.xlf [] []
[2023-11-06T20:49:17.346334+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.eu.xlf [] []
[2023-11-06T20:49:17.360643+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.fa.xlf [] []
[2023-11-06T20:49:17.375287+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.fi.xlf [] []
[2023-11-06T20:49:17.390560+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.fr.xlf [] []
[2023-11-06T20:49:17.405713+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.gl.xlf [] []
[2023-11-06T20:49:17.420557+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.he.xlf [] []
[2023-11-06T20:49:17.435512+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.hr.xlf [] []
[2023-11-06T20:49:17.449892+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.hu.xlf [] []
[2023-11-06T20:49:17.464161+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.hy.xlf [] []
[2023-11-06T20:49:17.478637+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.id.xlf [] []
[2023-11-06T20:49:17.494345+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.it.xlf [] []
[2023-11-06T20:49:17.508936+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.ja.xlf [] []
[2023-11-06T20:49:17.523603+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.lb.xlf [] []
[2023-11-06T20:49:17.538261+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.lt.xlf [] []
[2023-11-06T20:49:17.552600+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.lv.xlf [] []
[2023-11-06T20:49:17.567484+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.mn.xlf [] []
[2023-11-06T20:49:17.581885+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.my.xlf [] []
[2023-11-06T20:49:17.597547+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.nb.xlf [] []
[2023-11-06T20:49:17.627616+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.nl.xlf [] []
[2023-11-06T20:49:17.643942+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.nn.xlf [] []
[2023-11-06T20:49:17.658198+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.no.xlf [] []
[2023-11-06T20:49:17.672867+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.pl.xlf [] []
[2023-11-06T20:49:17.687952+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.pt.xlf [] []
[2023-11-06T20:49:17.702497+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.pt_BR.xlf [] []
[2023-11-06T20:49:17.720341+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.ro.xlf [] []
[2023-11-06T20:49:17.735982+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.ru.xlf [] []
[2023-11-06T20:49:17.750629+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.sk.xlf [] []
[2023-11-06T20:49:17.765625+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.sl.xlf [] []
[2023-11-06T20:49:17.780444+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.sq.xlf [] []
[2023-11-06T20:49:17.795653+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.sr_Cyrl.xlf [] []
[2023-11-06T20:49:17.811119+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.sr_Latn.xlf [] []
[2023-11-06T20:49:17.826660+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.sv.xlf [] []
[2023-11-06T20:49:17.844367+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.th.xlf [] []
[2023-11-06T20:49:17.859300+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.tl.xlf [] []
[2023-11-06T20:49:17.874559+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.tr.xlf [] []
[2023-11-06T20:49:17.890095+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.uk.xlf [] []
[2023-11-06T20:49:17.905098+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.ur.xlf [] []
[2023-11-06T20:49:17.920436+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.uz.xlf [] []
[2023-11-06T20:49:17.935270+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.vi.xlf [] []
[2023-11-06T20:49:17.949822+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.zh_CN.xlf [] []
[2023-11-06T20:49:17.964803+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/vendor/symfony/validator/Resources/translations/validators.zh_TW.xlf [] []
[2023-11-06T20:49:17.989825+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/config/routes/framework.yaml [] []
[2023-11-06T20:49:18.057299+03:00] php.DEBUG: Warning: filemtime(): stat failed for /var/www/config/routes/framework.yaml [] []
[2023-11-06T21:06:48.338912+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"mysql","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"mysql","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"}} []
[2023-11-06T21:06:48.454731+03:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "An exception occurred in the driver: SQLSTATE[HY000] [2002] php_network_getaddresses: getaddrinfo for mysql failed: Temporary failure in name resolution" {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 2002): An exception occurred in the driver: SQLSTATE[HY000] [2002] php_network_getaddresses: getaddrinfo for mysql failed: Temporary failure in name resolution at /home/simonchik/IdeaProjects/victory/vendor/doctrine/dbal/src/Driver/API/MySQL/ExceptionConverter.php:101)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 2002): SQLSTATE[HY000] [2002] php_network_getaddresses: getaddrinfo for mysql failed: Temporary failure in name resolution at /home/simonchik/IdeaProjects/victory/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:28)\n[previous exception] [object] (PDOException(code: 2002): SQLSTATE[HY000] [2002] php_network_getaddresses: getaddrinfo for mysql failed: Temporary failure in name resolution at /home/simonchik/IdeaProjects/victory/vendor/doctrine/dbal/src/Driver/PDO/MySQL/Driver.php:34)\n[previous exception] [object] (PDOException(code: 0): PDO::__construct(): php_network_getaddresses: getaddrinfo for mysql failed: Temporary failure in name resolution at /home/simonchik/IdeaProjects/victory/vendor/doctrine/dbal/src/Driver/PDO/MySQL/Driver.php:34)","command":"make:migration","message":"An exception occurred in the driver: SQLSTATE[HY000] [2002] php_network_getaddresses: getaddrinfo for mysql failed: Temporary failure in name resolution"} []
[2023-11-06T21:06:48.459116+03:00] console.DEBUG: Command "make:migration" exited with code "2002" {"command":"make:migration","code":2002} []
[2023-11-06T21:07:09.781205+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"}} []
[2023-11-06T21:07:09.787475+03:00] console.CRITICAL: Error thrown while running command "make:migration". Message: "An exception occurred in the driver: SQLSTATE[HY000] [2002] Connection refused" {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 2002): An exception occurred in the driver: SQLSTATE[HY000] [2002] Connection refused at /home/simonchik/IdeaProjects/victory/vendor/doctrine/dbal/src/Driver/API/MySQL/ExceptionConverter.php:101)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 2002): SQLSTATE[HY000] [2002] Connection refused at /home/simonchik/IdeaProjects/victory/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:28)\n[previous exception] [object] (PDOException(code: 2002): SQLSTATE[HY000] [2002] Connection refused at /home/simonchik/IdeaProjects/victory/vendor/doctrine/dbal/src/Driver/PDO/MySQL/Driver.php:34)","command":"make:migration","message":"An exception occurred in the driver: SQLSTATE[HY000] [2002] Connection refused"} []
[2023-11-06T21:07:09.787883+03:00] console.DEBUG: Command "make:migration" exited with code "2002" {"command":"make:migration","code":2002} []
[2023-11-06T21:07:21.391386+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":49101,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":49101,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"}} []
[2023-11-06T21:07:22.345773+03:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-11-06T21:07:22.546701+03:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"shop"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"shop"},"types":{"1":2}} []
[2023-11-06T21:07:23.007005+03:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-11-06T21:07:23.007632+03:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"shop"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"shop"},"types":{"1":2}} []
[2023-11-06T21:07:23.044975+03:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-11-06T21:07:23.045462+03:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"shop","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"shop","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2023-11-06T21:07:23.187170+03:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-11-06T21:07:23.187752+03:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'shop' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"shop","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'shop' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"shop","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2023-11-06T21:07:23.266218+03:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,        c.COLUMN_TYPE       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"shop","2":"shop","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n       c.COLUMN_TYPE       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"shop","2":"shop","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2023-11-06T21:07:23.304921+03:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-11-06T21:07:23.305429+03:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"shop","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"shop","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2023-11-06T21:07:23.387884+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-11-06T21:07:23.758128+03:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-11-06T21:07:23.758735+03:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"shop"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"shop"},"types":{"1":2}} []
[2023-11-06T21:07:23.760076+03:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-11-06T21:07:23.760454+03:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"shop"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"shop"},"types":{"1":2}} []
[2023-11-06T21:07:23.761792+03:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-11-06T21:07:23.762280+03:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"shop","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"shop","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2023-11-06T21:07:23.763448+03:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-11-06T21:07:23.763827+03:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'shop' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"shop","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'shop' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"shop","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2023-11-06T21:07:23.765759+03:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,        c.COLUMN_TYPE       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"shop","2":"shop","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n       c.COLUMN_TYPE       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"shop","2":"shop","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2023-11-06T21:07:23.768404+03:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-11-06T21:07:23.768826+03:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"shop","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"shop","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2023-11-06T21:07:23.770303+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-11-06T21:07:23.794586+03:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-11-06T21:07:23.795097+03:00] doctrine.DEBUG: Executing statement: SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,        c.COLUMN_TYPE       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION (parameters: array{"1":"shop","2":"shop"}, types: array{"1":2,"2":2}) {"sql":"SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,\n       c.COLUMN_TYPE       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION","params":{"1":"shop","2":"shop"},"types":{"1":2,"2":2}} []
[2023-11-06T21:07:23.797581+03:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"shop"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX","params":{"1":"shop"},"types":{"1":2}} []
[2023-11-06T21:07:23.799217+03:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'shop' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"shop"}, types: array{"1":2}) {"sql":"SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'shop' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"shop"},"types":{"1":2}} []
[2023-11-06T21:07:23.801103+03:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"shop"}, types: array{"1":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"shop"},"types":{"1":2}} []
[2023-11-06T21:07:23.883062+03:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-11-06T21:07:24.024211+03:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-11-06T21:07:24.046693+03:00] doctrine.INFO: Disconnecting [] []
[2023-11-06T21:07:41.215278+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":49101,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":49101,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"}} []
[2023-11-06T21:07:41.219716+03:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-11-06T21:07:45.061243+03:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-11-06T21:07:45.062816+03:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"shop"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"shop"},"types":{"1":2}} []
[2023-11-06T21:07:45.076960+03:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-11-06T21:07:45.077482+03:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"shop","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"shop","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2023-11-06T21:07:45.078802+03:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-11-06T21:07:45.079316+03:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'shop' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"shop","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'shop' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"shop","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2023-11-06T21:07:45.081369+03:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,        c.COLUMN_TYPE       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"shop","2":"shop","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n       c.COLUMN_TYPE       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"shop","2":"shop","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2023-11-06T21:07:45.084361+03:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-11-06T21:07:45.084868+03:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"shop","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"shop","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2023-11-06T21:07:45.113984+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-11-06T21:07:45.115803+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-11-06T21:07:45.116911+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-11-06T21:07:45.146606+03:00] doctrine.DEBUG: Beginning transaction [] []
[2023-11-06T21:07:45.182214+03:00] doctrine.DEBUG: Executing query: CREATE TABLE wheel_size (id INT AUTO_INCREMENT NOT NULL, slug VARCHAR(255) NOT NULL, wheel_size VARCHAR(255) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE wheel_size (id INT AUTO_INCREMENT NOT NULL, slug VARCHAR(255) NOT NULL, wheel_size VARCHAR(255) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2023-11-06T21:07:46.530539+03:00] doctrine.DEBUG: Executing query: CREATE TABLE wheels_brand_wheel_size (wheels_brand_id INT NOT NULL, wheel_size_id INT NOT NULL, INDEX IDX_A3D862599DAB8EB9 (wheels_brand_id), INDEX IDX_A3D8625912503765 (wheel_size_id), PRIMARY KEY(wheels_brand_id, wheel_size_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE wheels_brand_wheel_size (wheels_brand_id INT NOT NULL, wheel_size_id INT NOT NULL, INDEX IDX_A3D862599DAB8EB9 (wheels_brand_id), INDEX IDX_A3D8625912503765 (wheel_size_id), PRIMARY KEY(wheels_brand_id, wheel_size_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2023-11-06T21:07:47.243556+03:00] doctrine.DEBUG: Executing query: ALTER TABLE wheels_brand_wheel_size ADD CONSTRAINT FK_A3D862599DAB8EB9 FOREIGN KEY (wheels_brand_id) REFERENCES wheels_brand (id) ON DELETE CASCADE {"sql":"ALTER TABLE wheels_brand_wheel_size ADD CONSTRAINT FK_A3D862599DAB8EB9 FOREIGN KEY (wheels_brand_id) REFERENCES wheels_brand (id) ON DELETE CASCADE"} []
[2023-11-06T21:07:48.760981+03:00] doctrine.DEBUG: Executing query: ALTER TABLE wheels_brand_wheel_size ADD CONSTRAINT FK_A3D8625912503765 FOREIGN KEY (wheel_size_id) REFERENCES wheel_size (id) ON DELETE CASCADE {"sql":"ALTER TABLE wheels_brand_wheel_size ADD CONSTRAINT FK_A3D8625912503765 FOREIGN KEY (wheel_size_id) REFERENCES wheel_size (id) ON DELETE CASCADE"} []
[2023-11-06T21:07:50.399403+03:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20231106180723","2":"2023-11-06 21:07:45","3":5193}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20231106180723","2":"2023-11-06 21:07:45","3":5193},"types":{"1":2,"2":2,"3":1}} []
[2023-11-06T21:07:50.550018+03:00] doctrine.INFO: Disconnecting [] []
[2023-11-06T22:18:00.657321+03:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /var/www/vendor/symfony/error-handler/DebugClassLoader.php:335)"} []
[2023-11-06T22:18:00.728775+03:00] php.DEBUG: Warning: filemtime(): stat failed for /home/simonchik/IdeaProjects/victory/config/routes/framework.yaml {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":2,"file":"/var/www/vendor/symfony/config/Resource/FileResource.php","line":61,"trace":[{"file":"/var/www/vendor/symfony/config/Resource/SelfCheckingResourceChecker.php","line":44,"function":"isFresh","class":"Symfony\\Component\\Config\\Resource\\FileResource","type":"->"}],"count":1}}} []
[2023-11-06T22:18:01.108916+03:00] request.INFO: Matched route "app_wheelbrand_getbrands". {"route":"app_wheelbrand_getbrands","route_parameters":{"_route":"app_wheelbrand_getbrands","_controller":"App\\Controller\\WheelBrandController::getBrands"},"request_uri":"http://localhost:49100/wheelBrands","method":"GET"} []
[2023-11-06T22:18:01.134811+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-11-06T22:18:01.671898+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"mysql","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"mysql","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"}} []
[2023-11-06T22:18:01.746328+03:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.slug AS slug_2, t0.wheel_brand AS wheel_brand_3 FROM wheels_brand t0 ORDER BY t0.wheel_brand ASC {"sql":"SELECT t0.id AS id_1, t0.slug AS slug_2, t0.wheel_brand AS wheel_brand_3 FROM wheels_brand t0 ORDER BY t0.wheel_brand ASC"} []
[2023-11-06T22:18:05.850867+03:00] doctrine.INFO: Disconnecting [] []
[2023-11-06T22:18:19.927984+03:00] request.INFO: Matched route "app_wheelbrand_getbrandsbysize". {"route":"app_wheelbrand_getbrandsbysize","route_parameters":{"_route":"app_wheelbrand_getbrandsbysize","_controller":"App\\Controller\\WheelBrandController::getBrandsBySize","id":"1"},"request_uri":"http://localhost:49100/wheelBrands/1","method":"GET"} []
[2023-11-06T22:18:19.956009+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-11-06T22:18:21.703673+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"mysql","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"mysql","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"}} []
[2023-11-06T22:18:21.717107+03:00] doctrine.DEBUG: Executing statement: SELECT w0_.id AS id_0, w0_.slug AS slug_1, w0_.wheel_brand AS wheel_brand_2 FROM wheels_brand w0_ WHERE EXISTS (SELECT 1 FROM wheels_brand_wheel_size w1_ WHERE w1_.wheels_brand_id = w0_.id AND w1_.wheel_size_id IN (?)) (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT w0_.id AS id_0, w0_.slug AS slug_1, w0_.wheel_brand AS wheel_brand_2 FROM wheels_brand w0_ WHERE EXISTS (SELECT 1 FROM wheels_brand_wheel_size w1_ WHERE w1_.wheels_brand_id = w0_.id AND w1_.wheel_size_id IN (?))","params":{"1":1},"types":{"1":1}} []
[2023-11-06T22:18:22.827034+03:00] doctrine.INFO: Disconnecting [] []
[2023-11-06T22:18:36.269528+03:00] request.INFO: Matched route "app_wheelbrand_getbrandsbysize". {"route":"app_wheelbrand_getbrandsbysize","route_parameters":{"_route":"app_wheelbrand_getbrandsbysize","_controller":"App\\Controller\\WheelBrandController::getBrandsBySize","id":"3"},"request_uri":"http://localhost:49100/wheelBrands/3","method":"GET"} []
[2023-11-06T22:18:36.297245+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-11-06T22:18:36.874958+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"mysql","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"mysql","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"}} []
[2023-11-06T22:18:36.884785+03:00] doctrine.DEBUG: Executing statement: SELECT w0_.id AS id_0, w0_.slug AS slug_1, w0_.wheel_brand AS wheel_brand_2 FROM wheels_brand w0_ WHERE EXISTS (SELECT 1 FROM wheels_brand_wheel_size w1_ WHERE w1_.wheels_brand_id = w0_.id AND w1_.wheel_size_id IN (?)) (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT w0_.id AS id_0, w0_.slug AS slug_1, w0_.wheel_brand AS wheel_brand_2 FROM wheels_brand w0_ WHERE EXISTS (SELECT 1 FROM wheels_brand_wheel_size w1_ WHERE w1_.wheels_brand_id = w0_.id AND w1_.wheel_size_id IN (?))","params":{"1":3},"types":{"1":1}} []
[2023-11-06T22:18:37.245956+03:00] doctrine.INFO: Disconnecting [] []
[2023-11-06T22:18:43.207934+03:00] request.INFO: Matched route "app_wheelbrand_getbrandsbysize". {"route":"app_wheelbrand_getbrandsbysize","route_parameters":{"_route":"app_wheelbrand_getbrandsbysize","_controller":"App\\Controller\\WheelBrandController::getBrandsBySize","id":"3"},"request_uri":"http://localhost:49100/wheelBrands/3","method":"GET"} []
[2023-11-06T22:18:43.232844+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-11-06T22:18:43.824895+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"mysql","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"mysql","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"}} []
[2023-11-06T22:18:43.838428+03:00] doctrine.DEBUG: Executing statement: SELECT w0_.id AS id_0, w0_.slug AS slug_1, w0_.wheel_brand AS wheel_brand_2 FROM wheels_brand w0_ WHERE EXISTS (SELECT 1 FROM wheels_brand_wheel_size w1_ WHERE w1_.wheels_brand_id = w0_.id AND w1_.wheel_size_id IN (?)) (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT w0_.id AS id_0, w0_.slug AS slug_1, w0_.wheel_brand AS wheel_brand_2 FROM wheels_brand w0_ WHERE EXISTS (SELECT 1 FROM wheels_brand_wheel_size w1_ WHERE w1_.wheels_brand_id = w0_.id AND w1_.wheel_size_id IN (?))","params":{"1":3},"types":{"1":1}} []
[2023-11-06T22:18:44.196322+03:00] doctrine.INFO: Disconnecting [] []
[2023-11-06T22:20:03.858403+03:00] request.INFO: Matched route "app_wheelbrand_getbrandsbysize". {"route":"app_wheelbrand_getbrandsbysize","route_parameters":{"_route":"app_wheelbrand_getbrandsbysize","_controller":"App\\Controller\\WheelBrandController::getBrandsBySize","id":"3"},"request_uri":"http://localhost:49100/wheelBrands/3","method":"GET"} []
[2023-11-06T22:20:03.886278+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-11-06T22:20:04.462239+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"mysql","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"mysql","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"}} []
[2023-11-06T22:20:04.475063+03:00] doctrine.DEBUG: Executing statement: SELECT w0_.id AS id_0, w0_.slug AS slug_1, w0_.wheel_brand AS wheel_brand_2 FROM wheels_brand w0_ WHERE EXISTS (SELECT 1 FROM wheels_brand_wheel_size w1_ WHERE w1_.wheels_brand_id = w0_.id AND w1_.wheel_size_id IN (?)) (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT w0_.id AS id_0, w0_.slug AS slug_1, w0_.wheel_brand AS wheel_brand_2 FROM wheels_brand w0_ WHERE EXISTS (SELECT 1 FROM wheels_brand_wheel_size w1_ WHERE w1_.wheels_brand_id = w0_.id AND w1_.wheel_size_id IN (?))","params":{"1":3},"types":{"1":1}} []
[2023-11-06T22:20:04.823437+03:00] doctrine.INFO: Disconnecting [] []
[2023-11-06T22:20:27.365769+03:00] request.INFO: Matched route "app_wheelbrand_getbrandsbysize". {"route":"app_wheelbrand_getbrandsbysize","route_parameters":{"_route":"app_wheelbrand_getbrandsbysize","_controller":"App\\Controller\\WheelBrandController::getBrandsBySize","id":"3"},"request_uri":"http://localhost:49100/wheelBrands/3","method":"GET"} []
[2023-11-06T22:20:27.394638+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-11-06T22:20:28.007383+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"mysql","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"mysql","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"}} []
[2023-11-06T22:20:28.017841+03:00] doctrine.DEBUG: Executing statement: SELECT w0_.id AS id_0, w0_.slug AS slug_1, w0_.wheel_brand AS wheel_brand_2 FROM wheels_brand w0_ WHERE EXISTS (SELECT 1 FROM wheels_brand_wheel_size w1_ WHERE w1_.wheels_brand_id = w0_.id AND w1_.wheel_size_id IN (?)) (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT w0_.id AS id_0, w0_.slug AS slug_1, w0_.wheel_brand AS wheel_brand_2 FROM wheels_brand w0_ WHERE EXISTS (SELECT 1 FROM wheels_brand_wheel_size w1_ WHERE w1_.wheels_brand_id = w0_.id AND w1_.wheel_size_id IN (?))","params":{"1":3},"types":{"1":1}} []
[2023-11-06T22:20:28.376727+03:00] doctrine.INFO: Disconnecting [] []
[2023-11-06T22:20:32.977048+03:00] request.INFO: Matched route "app_wheelbrand_getbrandsbysize". {"route":"app_wheelbrand_getbrandsbysize","route_parameters":{"_route":"app_wheelbrand_getbrandsbysize","_controller":"App\\Controller\\WheelBrandController::getBrandsBySize","id":"1"},"request_uri":"http://localhost:49100/wheelBrands/1","method":"GET"} []
[2023-11-06T22:20:33.004691+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-11-06T22:20:33.584030+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"mysql","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"mysql","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"}} []
[2023-11-06T22:20:33.598192+03:00] doctrine.DEBUG: Executing statement: SELECT w0_.id AS id_0, w0_.slug AS slug_1, w0_.wheel_brand AS wheel_brand_2 FROM wheels_brand w0_ WHERE EXISTS (SELECT 1 FROM wheels_brand_wheel_size w1_ WHERE w1_.wheels_brand_id = w0_.id AND w1_.wheel_size_id IN (?)) (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT w0_.id AS id_0, w0_.slug AS slug_1, w0_.wheel_brand AS wheel_brand_2 FROM wheels_brand w0_ WHERE EXISTS (SELECT 1 FROM wheels_brand_wheel_size w1_ WHERE w1_.wheels_brand_id = w0_.id AND w1_.wheel_size_id IN (?))","params":{"1":1},"types":{"1":1}} []
[2023-11-06T22:20:33.973772+03:00] doctrine.INFO: Disconnecting [] []
[2023-11-06T22:20:42.492939+03:00] request.INFO: Matched route "app_wheelbrand_getbrandsbysize". {"route":"app_wheelbrand_getbrandsbysize","route_parameters":{"_route":"app_wheelbrand_getbrandsbysize","_controller":"App\\Controller\\WheelBrandController::getBrandsBySize","id":"2"},"request_uri":"http://localhost:49100/wheelBrands/2","method":"GET"} []
[2023-11-06T22:20:42.523345+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-11-06T22:20:43.134371+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"mysql","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"mysql","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"}} []
[2023-11-06T22:20:43.144610+03:00] doctrine.DEBUG: Executing statement: SELECT w0_.id AS id_0, w0_.slug AS slug_1, w0_.wheel_brand AS wheel_brand_2 FROM wheels_brand w0_ WHERE EXISTS (SELECT 1 FROM wheels_brand_wheel_size w1_ WHERE w1_.wheels_brand_id = w0_.id AND w1_.wheel_size_id IN (?)) (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT w0_.id AS id_0, w0_.slug AS slug_1, w0_.wheel_brand AS wheel_brand_2 FROM wheels_brand w0_ WHERE EXISTS (SELECT 1 FROM wheels_brand_wheel_size w1_ WHERE w1_.wheels_brand_id = w0_.id AND w1_.wheel_size_id IN (?))","params":{"1":2},"types":{"1":1}} []
[2023-11-06T22:20:43.497350+03:00] doctrine.INFO: Disconnecting [] []
[2023-11-06T22:21:12.926083+03:00] request.INFO: Matched route "app_wheelbrand_getbrandsbysize". {"route":"app_wheelbrand_getbrandsbysize","route_parameters":{"_route":"app_wheelbrand_getbrandsbysize","_controller":"App\\Controller\\WheelBrandController::getBrandsBySize","id":"2"},"request_uri":"http://localhost:49100/wheelBrands/2","method":"GET"} []
[2023-11-06T22:21:12.953081+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-11-06T22:21:13.533087+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"mysql","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"mysql","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"}} []
[2023-11-06T22:21:13.546857+03:00] doctrine.DEBUG: Executing statement: SELECT w0_.id AS id_0, w0_.slug AS slug_1, w0_.wheel_brand AS wheel_brand_2 FROM wheels_brand w0_ WHERE EXISTS (SELECT 1 FROM wheels_brand_wheel_size w1_ WHERE w1_.wheels_brand_id = w0_.id AND w1_.wheel_size_id IN (?)) (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT w0_.id AS id_0, w0_.slug AS slug_1, w0_.wheel_brand AS wheel_brand_2 FROM wheels_brand w0_ WHERE EXISTS (SELECT 1 FROM wheels_brand_wheel_size w1_ WHERE w1_.wheels_brand_id = w0_.id AND w1_.wheel_size_id IN (?))","params":{"1":2},"types":{"1":1}} []
[2023-11-06T22:21:13.910233+03:00] doctrine.INFO: Disconnecting [] []
[2023-11-06T22:22:41.173818+03:00] request.INFO: Matched route "app_wheelbrand_getbrandsbysize". {"route":"app_wheelbrand_getbrandsbysize","route_parameters":{"_route":"app_wheelbrand_getbrandsbysize","_controller":"App\\Controller\\WheelBrandController::getBrandsBySize","id":"2"},"request_uri":"http://localhost:49100/wheelBrands/2","method":"GET"} []
[2023-11-06T22:22:41.201933+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-11-06T22:22:41.782839+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"mysql","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"mysql","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"}} []
[2023-11-06T22:22:41.794665+03:00] doctrine.DEBUG: Executing statement: SELECT w0_.id AS id_0, w0_.slug AS slug_1, w0_.wheel_brand AS wheel_brand_2 FROM wheels_brand w0_ WHERE EXISTS (SELECT 1 FROM wheels_brand_wheel_size w1_ WHERE w1_.wheels_brand_id = w0_.id AND w1_.wheel_size_id IN (?)) (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT w0_.id AS id_0, w0_.slug AS slug_1, w0_.wheel_brand AS wheel_brand_2 FROM wheels_brand w0_ WHERE EXISTS (SELECT 1 FROM wheels_brand_wheel_size w1_ WHERE w1_.wheels_brand_id = w0_.id AND w1_.wheel_size_id IN (?))","params":{"1":2},"types":{"1":1}} []
[2023-11-06T22:22:42.174260+03:00] doctrine.INFO: Disconnecting [] []
[2023-11-06T22:22:56.429737+03:00] request.INFO: Matched route "app_wheelbrand_getbrandsbysize". {"route":"app_wheelbrand_getbrandsbysize","route_parameters":{"_route":"app_wheelbrand_getbrandsbysize","_controller":"App\\Controller\\WheelBrandController::getBrandsBySize","id":"2"},"request_uri":"http://localhost:49100/wheelBrands/2","method":"GET"} []
[2023-11-06T22:22:56.454605+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-11-06T22:22:57.037723+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"mysql","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"mysql","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"}} []
[2023-11-06T22:22:57.049237+03:00] doctrine.DEBUG: Executing statement: SELECT w0_.id AS id_0, w0_.slug AS slug_1, w0_.wheel_brand AS wheel_brand_2 FROM wheels_brand w0_ WHERE EXISTS (SELECT 1 FROM wheels_brand_wheel_size w1_ WHERE w1_.wheels_brand_id = w0_.id AND w1_.wheel_size_id IN (?)) (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT w0_.id AS id_0, w0_.slug AS slug_1, w0_.wheel_brand AS wheel_brand_2 FROM wheels_brand w0_ WHERE EXISTS (SELECT 1 FROM wheels_brand_wheel_size w1_ WHERE w1_.wheels_brand_id = w0_.id AND w1_.wheel_size_id IN (?))","params":{"1":2},"types":{"1":1}} []
[2023-11-06T22:22:57.401615+03:00] doctrine.INFO: Disconnecting [] []
[2023-11-06T22:23:29.813753+03:00] request.INFO: Matched route "app_wheelbrand_getbrands". {"route":"app_wheelbrand_getbrands","route_parameters":{"_route":"app_wheelbrand_getbrands","_controller":"App\\Controller\\WheelBrandController::getBrands"},"request_uri":"http://localhost:49100/wheelBrands","method":"GET"} []
[2023-11-06T22:23:29.837016+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2023-11-06T22:23:30.288440+03:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"mysql","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"mysql","port":3306,"user":"dev","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"shop","serverVersion":"8","charset":"utf8mb4"}} []
[2023-11-06T22:23:30.295477+03:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.slug AS slug_2, t0.wheel_brand AS wheel_brand_3 FROM wheels_brand t0 ORDER BY t0.wheel_brand ASC {"sql":"SELECT t0.id AS id_1, t0.slug AS slug_2, t0.wheel_brand AS wheel_brand_3 FROM wheels_brand t0 ORDER BY t0.wheel_brand ASC"} []
[2023-11-06T22:23:30.694258+03:00] doctrine.INFO: Disconnecting [] []
